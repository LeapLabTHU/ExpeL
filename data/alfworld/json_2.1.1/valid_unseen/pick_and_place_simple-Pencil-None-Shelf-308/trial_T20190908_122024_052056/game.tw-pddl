{"pddl_domain": ";; Specification in PDDL of the Alfred domain\n;; Intended to be used with Fast Downward which supports PDDL 2.2 level 1 plus the :action-costs requirement from PDDL 3.1.\n\n(define (domain alfred)\n (:requirements\n    :adl\n    :action-costs\n    :typing\n )\n (:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n\n\n (:predicates\n    (atLocation ?a - agent ?l - location)                     ; true if the agent is at the location\n    (receptacleAtLocation ?r - receptacle ?l - location)      ; true if the receptacle is at the location (constant)\n    (objectAtLocation ?o - object ?l - location)              ; true if the object is at the location\n    (openable ?r - receptacle)                                ; true if a receptacle is openable\n    (opened ?r - receptacle)                                  ; true if a receptacle is opened\n    (inReceptacle ?o - object ?r - receptacle)                ; object ?o is in receptacle ?r\n    (isReceptacleObject ?o - object)                          ; true if the object can have things put inside it\n    (inReceptacleObject ?innerObject - object ?outerObject - object)                ; object ?innerObject is inside object ?outerObject\n    (isReceptacleObjectFull ?o - object)                      ; true if the receptacle object contains something\n    (wasInReceptacle ?o - object ?r - receptacle)             ; object ?o was or is in receptacle ?r now or some time in the past\n    (checked ?r - receptacle)                                 ; whether the receptacle has been looked inside/visited\n    (examined ?l - location)                                  ; TODO\n    (receptacleType ?r - receptacle ?t - rtype)               ; the type of receptacle (Cabinet vs Cabinet|01|2...)\n    (canContain ?rt - rtype ?ot - otype)                      ; true if receptacle can hold object\n    (objectType ?o - object ?t - otype)                       ; the type of object (Apple vs Apple|01|2...)\n    (holds ?a - agent ?o - object)                            ; object ?o is held by agent ?a\n    (holdsAny ?a - agent)                                     ; agent ?a holds an object\n    (holdsAnyReceptacleObject ?a - agent)                        ; agent ?a holds a receptacle object\n    (full ?r - receptacle)                                    ; true if the receptacle has no remaining space\n    (isClean ?o - object)                                     ; true if the object has been clean in sink\n    (cleanable ?o - object)                                   ; true if the object can be placed in a sink\n    (isHot ?o - object)                                       ; true if the object has been heated up\n    (heatable ?o - object)                                    ; true if the object can be heated up in a microwave\n    (isCool ?o - object)                                      ; true if the object has been cooled\n    (coolable ?o - object)                                    ; true if the object can be cooled in the fridge\n    (pickupable ?o - object)                                   ; true if the object can be picked up\n    (moveable ?o - object)                                      ; true if the object can be moved\n    (toggleable ?o - object)                                  ; true if the object can be turned on/off\n    (isOn ?o - object)                                        ; true if the object is on\n    (isToggled ?o - object)                                   ; true if the object has been toggled\n    (sliceable ?o - object)                                   ; true if the object can be sliced\n    (isSliced ?o - object)                                    ; true if the object is sliced\n )\n\n  (:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;; All actions are specified such that the final arguments are the ones used\n;; for performing actions in Unity.\n\n\n(:action look\n    :parameters (?a - agent ?l - location)\n    :precondition\n        (and\n            (atLocation ?a ?l)\n        )\n    :effect\n        (and\n            (checked ?l)\n        )\n)\n\n(:action inventory\n    :parameters (?a - agent)\n    :precondition\n        ()\n    :effect\n        (and\n            (checked ?a)\n        )\n)\n\n(:action examineReceptacle\n    :parameters (?a - agent ?r - receptacle)\n    :precondition\n        (and\n            (exists (?l - location)\n                (and\n                    (atLocation ?a ?l)\n                    (receptacleAtLocation ?r ?l)\n                )\n            )\n        )\n    :effect\n        (and\n            (checked ?r)\n        )\n)\n\n(:action examineObject\n    :parameters (?a - agent ?o - object)\n    :precondition\n        (or\n            ;(exists (?l - location)\n            ;    (and\n            ;        (atLocation ?a ?l)\n            ;        (objectAtLocation ?o ?l)\n            ;    )\n            ;)\n            (exists (?l - location, ?r - receptacle)\n                (and\n                    (atLocation ?a ?l)\n                    (receptacleAtLocation ?r ?l)\n                    ; (objectAtLocation ?o ?l)\n                    (inReceptacle ?o ?r)\n                    (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n              )\n            )\n            (holds ?a ?o)\n        )\n    :effect\n        (and\n            (checked ?o)\n        )\n)\n\n;; agent goes to receptacle\n (:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    ;(exists (?r - receptacle) (receptacleAtLocation ?r ?lEnd))\n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                ; (forall (?r - receptacle)\n                ;     (when (and (receptacleAtLocation ?r ?lEnd)\n                ;                (or (not (openable ?r)) (opened ?r)))\n                ;         (checked ?r)\n                ;     )\n                ; )\n                ; (increase (total-cost) (distance ?lStart ?lEnd))\n                (increase (total-cost) 1)\n            )\n )\n\n;; agent opens receptacle\n (:action OpenObject\n    :parameters (?a - agent ?l - location ?r - receptacle)\n    :precondition (and\n            (openable ?r)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (not (opened ?r))\n            )\n    :effect (and\n                (opened ?r)\n                (checked ?r)\n                (increase (total-cost) 1)\n            )\n )\n;; agent closes receptacle\n (:action CloseObject\n    :parameters (?a - agent ?l - location ?r - receptacle)\n    :precondition (and\n            (openable ?r)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (opened ?r)\n            )\n    :effect (and\n                (not (opened ?r))\n                (increase (total-cost) 1)\n            )\n\n )\n\n ;; agent picks up object from a receptacle\n (:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            ; (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  ; agent's hands are empty.\n            ;(not (holdsAnyReceptacleObject ?a))\n            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n            ;(not (isReceptacleObject ?o))\n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            ;(not (full ?r))\n            (increase (total-cost) 1)\n        )\n )\n\n\n; ;; agent picks up object from a receptacle\n; (:action PickupObjectFromReceptacleObject\n;    :parameters (?a - agent ?l - location ?o - object ?outerR - object ?r - receptacle)\n;    :precondition\n;        (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (inReceptacle ?o ?r)\n;            (pickupable ?o)\n;            (not (holdsAny ?a))  ; agent's hands are empty.\n;            (not (holdsAnyReceptacleObject ?a))\n;            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n;            (not (isReceptacleObject ?o))\n;            (isReceptacleObject ?outerR)\n;            (inReceptacleObject ?o ?outerR)\n;        )\n;    :effect\n;        (and\n;            (not (inReceptacle ?o ?r))\n;            (holds ?a ?o)\n;            (holdsAny ?a)\n;            (not (objectAtLocation ?o ?l))\n;            (not (full ?r))\n;            (increase (total-cost) 1)\n;\n;            (not (inReceptacleObject ?o ?outerR))\n;            (not (isReceptacleObjectFull ?outerR))\n;        )\n; )\n;\n; ;; agent picks up object from a receptacle\n; (:action PickupEmptyReceptacleObject\n;    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n;    :precondition\n;        (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            ; (objectAtLocation ?o ?l)\n;            (inReceptacle ?o ?r)\n;            (pickupable ?o)\n;            (not (holdsAny ?a))  ; agent's hands are empty.\n;            (not (holdsAnyReceptacleObject ?a))\n;            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n;            (isReceptacleObject ?o)\n;            (not (isReceptacleObjectFull ?o))\n;        )\n;    :effect\n;        (and\n;            (not (inReceptacle ?o ?r))\n;            (holds ?a ?o)\n;            (holdsAny ?a)\n;            (not (objectAtLocation ?o ?l))\n;            (not (full ?r))\n;            (increase (total-cost) 1)\n;            (holdsAnyReceptacleObject ?a)\n;        )\n; )\n;\n; ;; agent picks up object from a receptacle\n; (:action PickupFullReceptacleObject\n;    :parameters (?a - agent ?l - location ?o - object ?outerR - object ?r - receptacle)\n;    :precondition\n;        (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (inReceptacle ?outerR ?r)\n;            (pickupable ?outerR)\n;            (not (holdsAny ?a))  ; agent's hands are empty.\n;            (not (holdsAnyReceptacleObject ?a))\n;            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n;            (not (isReceptacleObject ?o))\n;            (isReceptacleObject ?outerR)\n;            (inReceptacleObject ?o ?outerR)\n;        )\n;    :effect\n;        (and\n;            (not (inReceptacle ?o ?r))\n;            (not (inReceptacle ?outerR ?r))\n;            (holds ?a ?outerR)\n;            (holdsAny ?a)\n;            (not (objectAtLocation ?o ?l))\n;            (not (objectAtLocation ?outerR ?l))\n;            (not (full ?r))\n;            (increase (total-cost) 1)\n;            (holdsAnyReceptacleObject ?a)\n;        )\n; )\n\n\n;; agent puts down an object\n (:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    ; receptacle is opened if it is openable\n            ;(not (full ?r))\n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            ;(not (holdsAnyReceptacleObject ?a))\n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                ;(full ?r)\n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n;;; agent puts down an object\n; (:action PutObjectInReceptacleObject\n;    :parameters (?a - agent ?l - location ?ot - otype ?o - object ?outerO - object ?outerR - receptacle)\n;    :precondition (and\n;            (atLocation ?a ?l)\n;            (objectAtLocation ?outerO ?l)\n;            (isReceptacleObject ?outerO)\n;            (not (isReceptacleObject ?o))\n;            (objectType ?o ?ot)\n;            (holds ?a ?o)\n;            (not (holdsAnyReceptacleObject ?a))\n;            (inReceptacle ?outerO ?outerR)\n;            (not (isReceptacleObjectFull ?outerO))\n;            )\n;    :effect (and\n;                (inReceptacleObject ?o ?outerO)\n;                (inReceptacle ?o ?outerR)\n;                (not (holds ?a ?o))\n;                (not (holdsAny ?a))\n;                (objectAtLocation ?o ?l)\n;                (isReceptacleObjectFull ?outerO)\n;                (increase (total-cost) 1)\n;            )\n; )\n;\n;;; agent puts down an object\n; (:action PutEmptyReceptacleObjectinReceptacle\n;    :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n;    :precondition (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (or (not (openable ?r)) (opened ?r))    ; receptacle is opened if it is openable\n;            (not (full ?r))\n;            (objectType ?o ?ot)\n;            (holds ?a ?o)\n;            (holdsAnyReceptacleObject ?a)\n;            (isReceptacleObject ?o)\n;            (not (isReceptacleObjectFull ?o))\n;            )\n;    :effect (and\n;                (inReceptacle ?o ?r)\n;                (objectAtLocation ?o ?l)\n;                (full ?r)\n;                (not (holds ?a ?o))\n;                (not (holdsAny ?a))\n;                (not (holdsAnyReceptacleObject ?a))\n;                (increase (total-cost) 1)\n;            )\n; )\n;\n;;; agent puts down a receptacle object in a receptacle\n; (:action PutFullReceptacleObjectInReceptacle\n;    :parameters (?a - agent ?l - location ?ot - otype ?innerO - object ?outerO - object ?r - receptacle) ; ?rt - rtype)\n;    :precondition (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (objectType ?outerO ?ot)\n;            (holds ?a ?outerO)\n;            (holdsAnyReceptacleObject ?a)\n;            (isReceptacleObject ?outerO)\n;            (isReceptacleObjectFull ?outerO)\n;            (inReceptacleObject ?innerO ?outerO)\n;            )\n;    :effect (and\n;                (not (holdsAny ?a))\n;                (not (holdsAnyReceptacleObject ?a))\n;                (objectAtLocation ?outerO ?l)\n;                (objectAtLocation ?innerO ?l)\n;                (inReceptacle ?outerO ?r)\n;                (inReceptacle ?innerO ?r)\n;                (not (holds ?a ?outerO))\n;                (increase (total-cost) 1)\n;            )\n; )\n\n;; agent cleans some object\n (:action CleanObject\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n    :precondition (and\n            (cleanable ?o)\n            (or\n                (receptacleType ?r SinkType)\n                (receptacleType ?r SinkBasinType)\n            )\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isClean ?o)\n            )\n )\n\n\n;; agent heats-up some object\n (:action HeatObject\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n    :precondition (and\n            (heatable ?o)\n            (or\n                (receptacleType ?r MicrowaveType)\n            )\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isHot ?o)\n                (not (isCool ?o))\n            )\n )\n\n;; agent cools some object\n (:action CoolObject\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n    :precondition (and\n            (coolable ?o)\n            (or\n                (receptacleType ?r FridgeType)\n            )\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isCool ?o)\n                (not (isHot ?o))\n            )\n )\n\n\n;; agent toggle object\n (:action ToggleObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition (and\n            (toggleable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (inReceptacle ?o ?r)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (when (isOn ?o)\n                    (not (isOn ?o)))\n                (when (not (isOn ?o))\n                    (isOn ?o))\n                (isToggled ?o)\n            )\n )\n\n\n;; agent slices some object with a knife\n (:action SliceObject\n    :parameters (?a - agent ?l - location ?co - object ?ko - object)\n    :precondition\n            (and\n                (sliceable ?co)\n                (or\n                    (objectType ?ko KnifeType)\n                    (objectType ?ko ButterKnifeType)\n                )\n                (atLocation ?a ?l)\n                (objectAtLocation ?co ?l)\n                (holds ?a ?ko)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isSliced ?co)\n            )\n )\n\n\n)\n", "grammar": "grammar :: \"\"\"\n    {\n        \"intro\": [\n            {\n                \"rhs\": \"-= Welcome to TextWorld, ALFRED! =-\\n\\n#look.feedback#\\n\\n#task#\"\n            }\n        ],\n\n        \"notImplemented\": [\n            {\n                \"rhs\": \"TODO\"\n            }\n        ],\n\n        \"task\": [\n            {\n                \"rhs\": \"Your task is to: put a pencil in shelf.\"\n            }\n        ],\n\n        \"GotoLocation.feedback\": [\n            {\n                \"rhs\": \"You arrive at {lend.name}. #examineReceptacle.feedback#\"\n            }\n        ],\n\n        \"OpenObject.feedback\": [\n            {\n                \"rhs\": \"You open the {r.name}. #examineReceptacle.feedback#\"\n            }\n        ],\n\n        \"CloseObject.feedback\": [\n            {\n                \"rhs\": \"You close the {r.name}.\"\n            }\n        ],\n\n        \"PickupObject.feedback\": [\n            {\n                \"rhs\": \"You pick up the {o.name} from the {r.name}.\"\n            }\n        ],\n\n        \"PickupObjectFromReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PickupObjectFromReceptacleObject: You pick up the {o.name}.\"\n            }\n        ],\n\n        \"PickupEmptyReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PickupEmptyReceptacleObject: You pick up the {o.name}.\"\n            }\n        ],\n\n        \"PickupFullReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PickupFullReceptacleObject: You pick up the {outerr.name}.\"\n            }\n        ],\n\n        \"PutObject.feedback\": [\n            {\n                \"rhs\": \"You put the {o.name} in/on the {r.name}.\"\n            }\n        ],\n\n        \"PutObjectInReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PutObjectInReceptacleObject: You put the {o.name} in the {outero.name}.\"\n            }\n        ],\n\n        \"PutEmptyReceptacleObjectinReceptacle.feedback\": [\n            {\n                \"rhs\": \"PutEmptyReceptacleObjectinReceptacle: You put the {o.name} in the {r.name}.\"\n            }\n        ],\n\n        \"PutFullReceptacleObjectInReceptacle.feedback\": [\n            {\n                \"rhs\": \"PutFullReceptacleObjectInReceptacle: You put the {outero.name} in the {r.name}.\"\n            }\n        ],\n\n        \"inventory.feedback\": [\n            {\n                \"condition\": \"holdsany(a:agent)\",\n                \"rhs\": \"You are carrying: [{o.indefinite + ' ' + o.name | holds(a:agent, o:object)}].\"\n            },\n            {\n                \"rhs\": \"You are not carrying anything.\"\n            }\n        ],\n\n        \"examineReceptacle.feedback\": [\n            {\n                \"condition\": \"openable(r:receptacle) & opened(r:receptacle)\",\n                \"rhs\": \"The {r.name} is open. In it, you see [{o.indefinite + ' ' + o.name | inreceptacle(o:object, r:receptacle)}].\"\n            },\n            {\n                \"condition\": \"openable(r:receptacle)\",\n                \"rhs\": \"The {r.name} is closed.\"\n            },\n            {\n                \"rhs\": \"On the {r.name}, you see [{o.indefinite + ' ' + o.name | inreceptacle(o:object, r:receptacle)}].\"\n            }\n        ],\n\n        \"examineObject.feedback\": [\n            {\n                \"condition\": \"isreceptacleobject(o:object)\",\n                \"rhs\": \"This is a normal {o.name}. In it, you see [{o2.indefinite + ' ' + o2.name | inreceptacleobject(o2:object, o:object)}].\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & ishot(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a hot and clean sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & iscool(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a cool and clean sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a clean sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"ishot(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a hot sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"iscool(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a cool sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & ishot(o:object)\",\n                \"rhs\": \"This is a hot and clean {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & iscool(o:object)\",\n                \"rhs\": \"This is a cool and clean {o.name}.\"\n            },\n            {\n                \"condition\": \"ishot(o:object)\",\n                \"rhs\": \"This is a hot {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object)\",\n                \"rhs\": \"This is a clean {o.name}.\"\n            },\n            {\n                \"condition\": \"iscool(o:object)\",\n                \"rhs\": \"This is a cold {o.name}.\"\n            },\n            {\n                \"condition\": \"toggleable(o:object) & istoggled(o:object)\",\n                \"rhs\": \"This {o.name} is on.\"\n            },\n            {\n                \"condition\": \"toggleable(o:object) & not_istoggled(o:object)\",\n                \"rhs\": \"This {o.name} is off.\"\n            },\n            {\n                \"condition\": \"sliceable(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a sliced {o.name}.\"\n            },\n            {\n                \"rhs\": \"There's nothing special about {o.name}.\"\n            }\n        ]\n    }\n\"\"\";\n\naction GotoLocation {\n    template :: \"go to [{r.name | receptacleatlocation(r:receptacle, lend:location)}]\";\n    feedback :: \"#GotoLocation.feedback#\";\n}\n\naction OpenObject {\n    template :: \"open {r}\";\n    feedback :: \"#OpenObject.feedback#\";\n}\n\naction CloseObject {\n    template :: \"close {r}\";\n    feedback :: \"#CloseObject.feedback#\";\n}\n\naction PickupObject {\n    template :: \"take {o} from {r}\";\n    feedback :: \"#PickupObject.feedback#\";\n}\n\naction PickupObjectFromReceptacleObject {\n    template :: \"take {o} from {r}\";\n    feedback :: \"#PickupObjectFromReceptacleObject.feedback#\";\n}\n\naction PickupEmptyReceptacleObject {\n    template :: \"take {o} from {r}\";\n    feedback :: \"#PickupEmptyReceptacleObject.feedback#\";\n}\n\naction PickupFullReceptacleObject {\n    template :: \"take {outerr} from {r}\";\n    feedback :: \"#PickupFullReceptacleObject.feedback#\";\n}\n\naction PutObject {\n    template :: \"put {o} in/on {r}\";\n    feedback :: \"#PutObject.feedback#\";\n}\n\naction PutObjectInReceptacleObject {\n    template :: \"put {o} into {outero}\";\n    feedback :: \"#PutObjectInReceptacleObject.feedback#\";\n}\n\naction PutEmptyReceptacleObjectinReceptacle {\n    template :: \"put {o} in/on {r}\";\n    feedback :: \"#PutEmptyReceptacleObjectinReceptacle.feedback#\";\n}\n\naction PutFullReceptacleObjectInReceptacle {\n    template :: \"put {outero} in {r}\";\n    feedback :: \"#PutFullReceptacleObjectInReceptacle.feedback#\";\n}\n\naction inventory {\n    template :: \"inventory\";\n    feedback :: \"#inventory.feedback#\";\n}\n\naction examineReceptacle {\n    template :: \"examine {r}\";\n    feedback :: \"#examineReceptacle.feedback#\";\n}\n\naction examineObject {\n    template :: \"examine {o}\";\n    feedback :: \"#examineObject.feedback#\";\n}\n\naction ToggleObject {\n    template :: \"use {o}\";\n    feedback :: \"#toggleObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"toggleObject.feedback\": [\n                {\n                    \"condition\": \"toggleable(o:object) & istoggled(o:object)\",\n                    \"rhs\": \"You turn on the {o.name}.\"\n                },\n                {\n                    \"condition\": \"toggleable(o:object)\",\n                    \"rhs\": \"You turn off the {o.name}.\"\n                },\n                {\n                    \"rhs\": \"You don't see any switch on the {o.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction HeatObject {\n    template :: \"heat {o} with {r}\";\n    feedback :: \"#heatObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"heatObject.feedback\": [\n                {\n                    \"rhs\": \"You heat the {o.name} using the {r.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction CleanObject {\n    template :: \"clean {o} with {r}\";\n    feedback :: \"#cleanObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"cleanObject.feedback\": [\n                {\n                    \"rhs\": \"You clean the {o.name} using the {r.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction CoolObject {\n    template :: \"cool {o} with {r}\";\n    feedback :: \"#coolObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"coolObject.feedback\": [\n                {\n                    \"rhs\": \"You cool the {o.name} using the {r.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction SliceObject {\n    template :: \"slice {co} with {ko}\";\n    feedback :: \"#sliceObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"sliceObject.feedback\": [\n                {\n                    \"rhs\": \"You sliced the {co.name} with the {ko.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction look {\n    template :: \"look\";\n    feedback :: \"#look.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"look.feedback\": [\n                {\n                   \"condition\": \"atlocation(a:agent, l:location) & receptacleatlocation(r:receptacle, l:location)\",\n                   \"rhs\": \"#look-variations#. Next to it, you see #list_objects_on_the_floor#.\"\n                },\n                {\n                    \"rhs\": \"You are in the middle of a room. Looking quickly around you, you see #list_appliances#.\"\n                }\n            ],\n\n            \"look-variations\": [\n                {\n                    \"rhs\": \"You are facing the [{r.name | atlocation(a:agent, l:location) & receptacleatlocation(r:receptacle, l:location)}]\"\n                }\n            ],\n\n            \"list_objects_on_the_floor\": [\n                {\n                    \"condition\": \"atlocation(a:agent, l:location) & objectatlocation(o:object, l:location) & receptacleatlocation(r:receptacle, l:location) & not_inreceptacle(o:object, r:receptacle)\",\n                    \"rhs\": \"[{#overview(o)# | atlocation(a:agent, l:location) & objectatlocation(o:object, l:location) & receptacleatlocation(r:receptacle, l:location) & not_inreceptacle(o:object, r:receptacle)}]\"\n                },\n                {\n                    \"rhs\": \"nothing\"\n                }\n            ],\n\n            \"list_appliances\": [\n                {\n                    \"condition\": \"receptacleatlocation(r:receptacle, l:location)\",\n                    \"rhs\": \"[{#overview(r)# | receptacleatlocation(r:receptacle, l:location)}]\"\n                },\n                {\n                    \"rhs\": \"nothing\"\n                }\n            ],\n\n            \"overview(o, r)\": [\n                {\n                    \"rhs\": \"{o.indefinite} {o.name} (in/on the {r.name})}\"\n                }\n            ],\n\n            \"overview(o)\": [\n                {\n                    \"rhs\": \"{o.indefinite} {o.name}\"\n                }\n            ],\n            \"overview(r)\": [\n                {\n                    \"rhs\": \"{r.indefinite} {r.name or r.id}\"\n                }\n            ],\n            \"overview_with_state(r)\": [\n                {\n                    \"rhs\": \"{r.indefinite} {r.name or r.id}#overview_state(r)#\"\n                }\n            ],\n            \"overview_state(r)\": [\n                {\n                    \"condition\": \"openable(r:receptacle) & opened(r:receptacle)\",\n                    \"rhs\": \" (it is open)\"\n                },\n                {\n                    \"condition\": \"openable(r:receptacle)\",\n                    \"rhs\": \" (it is closed)\"\n                },\n                {\n                    \"rhs\": \"\"\n                }\n            ],\n\n            \"list_empty\": [\n                {\n                    \"rhs\": \"nothing\"\n                }\n            ],\n            \"list_separator\": [\n                {\n                    \"rhs\": \", \"\n                }\n            ],\n            \"list_last_separator\": [\n                {\n                    \"rhs\": \", and \"\n                }\n            ]\n        }\n    \"\"\";\n}\n", "pddl_problem": "\n(define (problem plan_trial_T20190908_122024_052056)\n(:domain alfred)\n(:objects\nagent1 - agent\nRemoteControl - object\n        Laptop - object\n        Kettle - object\n        Pen - object\n        Fork - object\n        Cloth - object\n        HousePlant - object\n        Plunger - object\n        SoapBottle - object\n        Cup - object\n        Candle - object\n        Tomato - object\n        Television - object\n        TennisRacket - object\n        Towel - object\n        SaltShaker - object\n        Spoon - object\n        Apple - object\n        Poster - object\n        Curtains - object\n        Footstool - object\n        AlarmClock - object\n        Ladle - object\n        PaperTowelRoll - object\n        BaseballBat - object\n        Knife - object\n        Spatula - object\n        SoapBar - object\n        CreditCard - object\n        Sink - object\n        Newspaper - object\n        LaundryHamperLid - object\n        KeyChain - object\n        Glassbottle - object\n        ButterKnife - object\n        Chair - object\n        HandTowel - object\n        ToiletPaperRoll - object\n        Plate - object\n        Pot - object\n        WineBottle - object\n        Boots - object\n        PepperShaker - object\n        PaperTowel - object\n        Bowl - object\n        SprayBottle - object\n        ScrubBrush - object\n        Box - object\n        CD - object\n        Pan - object\n        Statue - object\n        Vase - object\n        ShowerGlass - object\n        DishSponge - object\n        Egg - object\n        Lettuce - object\n        Book - object\n        TeddyBear - object\n        ToiletPaper - object\n        ShowerDoor - object\n        Window - object\n        Blinds - object\n        CellPhone - object\n        FloorLamp - object\n        Pillow - object\n        Mirror - object\n        Painting - object\n        TissueBox - object\n        Pencil - object\n        Potato - object\n        LightSwitch - object\n        StoveKnob - object\n        Mug - object\n        Bathtub - object\n        DeskLamp - object\n        Watch - object\n        WateringCan - object\n        BasketBall - object\n        Bread - object\nRemoteControlType - otype\n        LaptopType - otype\n        KettleType - otype\n        PenType - otype\n        ForkType - otype\n        ClothType - otype\n        HousePlantType - otype\n        PlungerType - otype\n        SoapBottleType - otype\n        CupType - otype\n        CandleType - otype\n        TomatoType - otype\n        TelevisionType - otype\n        TennisRacketType - otype\n        TowelType - otype\n        SaltShakerType - otype\n        SpoonType - otype\n        AppleType - otype\n        PosterType - otype\n        CurtainsType - otype\n        FootstoolType - otype\n        AlarmClockType - otype\n        LadleType - otype\n        PaperTowelRollType - otype\n        BaseballBatType - otype\n        KnifeType - otype\n        SpatulaType - otype\n        SoapBarType - otype\n        CreditCardType - otype\n        SinkType - otype\n        NewspaperType - otype\n        LaundryHamperLidType - otype\n        KeyChainType - otype\n        GlassbottleType - otype\n        ButterKnifeType - otype\n        ChairType - otype\n        HandTowelType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        PotType - otype\n        WineBottleType - otype\n        BootsType - otype\n        PepperShakerType - otype\n        PaperTowelType - otype\n        BowlType - otype\n        SprayBottleType - otype\n        ScrubBrushType - otype\n        BoxType - otype\n        CDType - otype\n        PanType - otype\n        StatueType - otype\n        VaseType - otype\n        ShowerGlassType - otype\n        DishSpongeType - otype\n        EggType - otype\n        LettuceType - otype\n        BookType - otype\n        TeddyBearType - otype\n        ToiletPaperType - otype\n        ShowerDoorType - otype\n        WindowType - otype\n        BlindsType - otype\n        CellPhoneType - otype\n        FloorLampType - otype\n        PillowType - otype\n        MirrorType - otype\n        PaintingType - otype\n        TissueBoxType - otype\n        PencilType - otype\n        PotatoType - otype\n        LightSwitchType - otype\n        StoveKnobType - otype\n        MugType - otype\n        BathtubType - otype\n        DeskLampType - otype\n        WatchType - otype\n        WateringCanType - otype\n        BasketBallType - otype\n        BreadType - otype\nSinkBasinType - rtype\n        GarbageCanType - rtype\n        StoveBurnerType - rtype\n        OttomanType - rtype\n        CabinetType - rtype\n        SideTableType - rtype\n        DiningTableType - rtype\n        CoffeeTableType - rtype\n        SafeType - rtype\n        DresserType - rtype\n        DeskType - rtype\n        BedType - rtype\n        TowelHolderType - rtype\n        ToiletPaperHangerType - rtype\n        MicrowaveType - rtype\n        SofaType - rtype\n        CartType - rtype\n        ArmChairType - rtype\n        HandTowelHolderType - rtype\n        TVStandType - rtype\n        BathtubBasinType - rtype\n        CoffeeMachineType - rtype\n        ToasterType - rtype\n        LaundryHamperType - rtype\n        DrawerType - rtype\n        FridgeType - rtype\n        ToiletType - rtype\n        ShelfType - rtype\n        PaintingHangerType - rtype\n        CounterTopType - rtype\n\n\n        AlarmClock_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_53 - object\n        AlarmClock_bar__minus_01_dot_18_bar__plus_01_dot_72_bar__plus_00_dot_45 - object\n        AlarmClock_bar__minus_01_dot_34_bar__plus_01_dot_72_bar__plus_00_dot_49 - object\n        BaseballBat_bar__plus_01_dot_95_bar__plus_00_dot_66_bar__minus_01_dot_81 - object\n        BasketBall_bar__plus_01_dot_98_bar__plus_00_dot_12_bar__plus_00_dot_21 - object\n        Blinds_bar__plus_00_dot_60_bar__plus_02_dot_16_bar__minus_01_dot_92 - object\n        Blinds_bar__minus_00_dot_40_bar__plus_02_dot_16_bar__minus_01_dot_92 - object\n        Book_bar__plus_01_dot_00_bar__plus_00_dot_78_bar__plus_02_dot_52 - object\n        Book_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_01_dot_08 - object\n        Bowl_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_01_dot_36 - object\n        Bowl_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_58 - object\n        Bowl_bar__minus_02_dot_05_bar__plus_01_dot_35_bar__plus_00_dot_37 - object\n        CD_bar__minus_02_dot_24_bar__plus_00_dot_04_bar__plus_02_dot_68 - object\n        CellPhone_bar__minus_02_dot_03_bar__plus_00_dot_04_bar__plus_02_dot_47 - object\n        Chair_bar__minus_00_dot_13_bar__plus_00_dot_53_bar__minus_01_dot_58 - object\n        Chair_bar__minus_01_dot_42_bar__plus_00_dot_53_bar__plus_00_dot_81 - object\n        CreditCard_bar__minus_00_dot_55_bar__plus_00_dot_36_bar__minus_00_dot_93 - object\n        CreditCard_bar__minus_00_dot_74_bar__plus_00_dot_86_bar__minus_01_dot_53 - object\n        CreditCard_bar__minus_01_dot_83_bar__plus_01_dot_35_bar__plus_00_dot_53 - object\n        DeskLamp_bar__minus_02_dot_30_bar__plus_00_dot_87_bar__plus_00_dot_75 - object\n        KeyChain_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_83 - object\n        KeyChain_bar__minus_01_dot_83_bar__plus_00_dot_39_bar__plus_00_dot_65 - object\n        Laptop_bar__plus_00_dot_80_bar__plus_00_dot_78_bar__plus_01_dot_08 - object\n        Laptop_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_00_dot_79 - object\n        LaundryHamperLid_bar__plus_00_dot_16_bar__plus_00_dot_48_bar__plus_02_dot_64 - object\n        LightSwitch_bar__plus_02_dot_15_bar__plus_01_dot_23_bar__minus_00_dot_52 - object\n        Mirror_bar__minus_01_dot_36_bar__plus_01_dot_43_bar__plus_02_dot_86 - object\n        Mug_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_70 - object\n        Pencil_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_00_dot_66 - object\n        Pencil_bar__minus_01_dot_92_bar__plus_00_dot_88_bar__plus_00_dot_75 - object\n        Pen_bar__minus_00_dot_47_bar__plus_00_dot_65_bar__minus_00_dot_69 - object\n        Pen_bar__minus_00_dot_79_bar__plus_00_dot_21_bar__minus_00_dot_34 - object\n        Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_01_dot_37 - object\n        Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_02_dot_52 - object\n        Window_bar__plus_00_dot_58_bar__plus_01_dot_53_bar__minus_01_dot_95 - object\n        Window_bar__minus_00_dot_42_bar__plus_01_dot_53_bar__minus_01_dot_95 - object\n        Bed_bar__plus_01_dot_23_bar__plus_00_dot_00_bar__plus_01_dot_67 - receptacle\n        Desk_bar__minus_00_dot_57_bar__plus_00_dot_00_bar__minus_01_dot_35 - receptacle\n        Desk_bar__minus_01_dot_58_bar__plus_00_dot_02_bar__plus_00_dot_67 - receptacle\n        Drawer_bar__minus_00_dot_51_bar__plus_00_dot_19_bar__minus_00_dot_85 - receptacle\n        Drawer_bar__minus_00_dot_51_bar__plus_00_dot_47_bar__minus_00_dot_85 - receptacle\n        Drawer_bar__minus_00_dot_51_bar__plus_00_dot_72_bar__minus_00_dot_85 - receptacle\n        Drawer_bar__minus_02_dot_07_bar__plus_00_dot_21_bar__plus_00_dot_73 - receptacle\n        Drawer_bar__minus_02_dot_07_bar__plus_00_dot_49_bar__plus_00_dot_73 - receptacle\n        Drawer_bar__minus_02_dot_07_bar__plus_00_dot_74_bar__plus_00_dot_73 - receptacle\n        GarbageCan_bar__minus_00_dot_75_bar__plus_00_dot_00_bar__minus_00_dot_34 - receptacle\n        LaundryHamper_bar__plus_00_dot_16_bar__plus_00_dot_01_bar__plus_02_dot_64 - receptacle\n        Safe_bar__minus_02_dot_18_bar__plus_00_dot_00_bar__plus_02_dot_58 - receptacle\n        Shelf_bar__minus_01_dot_29_bar__plus_00_dot_87_bar__plus_00_dot_41 - receptacle\n        Shelf_bar__minus_01_dot_29_bar__plus_01_dot_34_bar__plus_00_dot_41 - receptacle\n        Shelf_bar__minus_01_dot_29_bar__plus_01_dot_72_bar__plus_00_dot_41 - receptacle\n        Shelf_bar__minus_01_dot_96_bar__plus_00_dot_87_bar__plus_00_dot_41 - receptacle\n        Shelf_bar__minus_01_dot_96_bar__plus_01_dot_34_bar__plus_00_dot_41 - receptacle\n        Shelf_bar__minus_01_dot_96_bar__plus_01_dot_72_bar__plus_00_dot_41 - receptacle\n        loc_bar__minus_5_bar_6_bar_3_bar_45 - location\n        loc_bar_1_bar_0_bar_3_bar_60 - location\n        loc_bar_1_bar__minus_5_bar_3_bar_60 - location\n        loc_bar__minus_8_bar_8_bar_0_bar_60 - location\n        loc_bar_2_bar__minus_6_bar_3_bar_0 - location\n        loc_bar_2_bar__minus_5_bar_2_bar_15 - location\n        loc_bar__minus_4_bar_8_bar_3_bar_60 - location\n        loc_bar_6_bar_0_bar_1_bar_60 - location\n        loc_bar_0_bar_9_bar_0_bar_60 - location\n        loc_bar_6_bar__minus_5_bar_2_bar_60 - location\n        loc_bar__minus_1_bar_3_bar_3_bar_45 - location\n        loc_bar__minus_4_bar_5_bar_2_bar_0 - location\n        loc_bar__minus_8_bar_5_bar_2_bar_60 - location\n        loc_bar__minus_1_bar_6_bar_1_bar_45 - location\n        loc_bar_6_bar__minus_2_bar_1_bar_30 - location\n        loc_bar_2_bar__minus_6_bar_3_bar__minus_30 - location\n        loc_bar_2_bar__minus_6_bar_2_bar__minus_30 - location\n        loc_bar_1_bar__minus_5_bar_3_bar_45 - location\n        loc_bar_0_bar__minus_3_bar_3_bar_60 - location\n        loc_bar__minus_5_bar_9_bar_0_bar_15 - location\n        loc_bar__minus_4_bar_6_bar_2_bar_30 - location\n        loc_bar_2_bar__minus_6_bar_3_bar_60 - location\n        loc_bar__minus_3_bar_4_bar_3_bar_15 - location\n        loc_bar__minus_7_bar_6_bar_2_bar_30 - location\n        loc_bar__minus_7_bar_5_bar_2_bar_0 - location\n        loc_bar__minus_2_bar_2_bar_3_bar_15 - location\n        loc_bar__minus_7_bar_5_bar_2_bar_60 - location\n        loc_bar__minus_2_bar_3_bar_3_bar_30 - location\n        )\n    \n\n(:init\n\n\n        (receptacleType Drawer_bar__minus_00_dot_51_bar__plus_00_dot_47_bar__minus_00_dot_85 DrawerType)\n        (receptacleType LaundryHamper_bar__plus_00_dot_16_bar__plus_00_dot_01_bar__plus_02_dot_64 LaundryHamperType)\n        (receptacleType Drawer_bar__minus_00_dot_51_bar__plus_00_dot_19_bar__minus_00_dot_85 DrawerType)\n        (receptacleType Drawer_bar__minus_02_dot_07_bar__plus_00_dot_21_bar__plus_00_dot_73 DrawerType)\n        (receptacleType Drawer_bar__minus_02_dot_07_bar__plus_00_dot_49_bar__plus_00_dot_73 DrawerType)\n        (receptacleType Desk_bar__minus_01_dot_58_bar__plus_00_dot_02_bar__plus_00_dot_67 DeskType)\n        (receptacleType Shelf_bar__minus_01_dot_29_bar__plus_01_dot_72_bar__plus_00_dot_41 ShelfType)\n        (receptacleType Drawer_bar__minus_02_dot_07_bar__plus_00_dot_74_bar__plus_00_dot_73 DrawerType)\n        (receptacleType Shelf_bar__minus_01_dot_96_bar__plus_01_dot_72_bar__plus_00_dot_41 ShelfType)\n        (receptacleType Shelf_bar__minus_01_dot_96_bar__plus_01_dot_34_bar__plus_00_dot_41 ShelfType)\n        (receptacleType Drawer_bar__minus_00_dot_51_bar__plus_00_dot_72_bar__minus_00_dot_85 DrawerType)\n        (receptacleType Shelf_bar__minus_01_dot_29_bar__plus_00_dot_87_bar__plus_00_dot_41 ShelfType)\n        (receptacleType Safe_bar__minus_02_dot_18_bar__plus_00_dot_00_bar__plus_02_dot_58 SafeType)\n        (receptacleType Shelf_bar__minus_01_dot_29_bar__plus_01_dot_34_bar__plus_00_dot_41 ShelfType)\n        (receptacleType GarbageCan_bar__minus_00_dot_75_bar__plus_00_dot_00_bar__minus_00_dot_34 GarbageCanType)\n        (receptacleType Bed_bar__plus_01_dot_23_bar__plus_00_dot_00_bar__plus_01_dot_67 BedType)\n        (receptacleType Shelf_bar__minus_01_dot_96_bar__plus_00_dot_87_bar__plus_00_dot_41 ShelfType)\n        (receptacleType Desk_bar__minus_00_dot_57_bar__plus_00_dot_00_bar__minus_01_dot_35 DeskType)\n        (objectType LightSwitch_bar__plus_02_dot_15_bar__plus_01_dot_23_bar__minus_00_dot_52 LightSwitchType)\n        (objectType AlarmClock_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_53 AlarmClockType)\n        (objectType Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_01_dot_37 PillowType)\n        (objectType Pen_bar__minus_00_dot_79_bar__plus_00_dot_21_bar__minus_00_dot_34 PenType)\n        (objectType KeyChain_bar__minus_01_dot_83_bar__plus_00_dot_39_bar__plus_00_dot_65 KeyChainType)\n        (objectType Mirror_bar__minus_01_dot_36_bar__plus_01_dot_43_bar__plus_02_dot_86 MirrorType)\n        (objectType DeskLamp_bar__minus_02_dot_30_bar__plus_00_dot_87_bar__plus_00_dot_75 DeskLampType)\n        (objectType Book_bar__plus_01_dot_00_bar__plus_00_dot_78_bar__plus_02_dot_52 BookType)\n        (objectType Chair_bar__minus_01_dot_42_bar__plus_00_dot_53_bar__plus_00_dot_81 ChairType)\n        (objectType Book_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_01_dot_08 BookType)\n        (objectType Blinds_bar__minus_00_dot_40_bar__plus_02_dot_16_bar__minus_01_dot_92 BlindsType)\n        (objectType Window_bar__minus_00_dot_42_bar__plus_01_dot_53_bar__minus_01_dot_95 WindowType)\n        (objectType Mug_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_70 MugType)\n        (objectType Bowl_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_58 BowlType)\n        (objectType AlarmClock_bar__minus_01_dot_34_bar__plus_01_dot_72_bar__plus_00_dot_49 AlarmClockType)\n        (objectType Window_bar__plus_00_dot_58_bar__plus_01_dot_53_bar__minus_01_dot_95 WindowType)\n        (objectType CellPhone_bar__minus_02_dot_03_bar__plus_00_dot_04_bar__plus_02_dot_47 CellPhoneType)\n        (objectType CreditCard_bar__minus_01_dot_83_bar__plus_01_dot_35_bar__plus_00_dot_53 CreditCardType)\n        (objectType Laptop_bar__plus_00_dot_80_bar__plus_00_dot_78_bar__plus_01_dot_08 LaptopType)\n        (objectType Pencil_bar__minus_01_dot_92_bar__plus_00_dot_88_bar__plus_00_dot_75 PencilType)\n        (objectType BaseballBat_bar__plus_01_dot_95_bar__plus_00_dot_66_bar__minus_01_dot_81 BaseballBatType)\n        (objectType LaundryHamperLid_bar__plus_00_dot_16_bar__plus_00_dot_48_bar__plus_02_dot_64 LaundryHamperLidType)\n        (objectType AlarmClock_bar__minus_01_dot_18_bar__plus_01_dot_72_bar__plus_00_dot_45 AlarmClockType)\n        (objectType CreditCard_bar__minus_00_dot_55_bar__plus_00_dot_36_bar__minus_00_dot_93 CreditCardType)\n        (objectType Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_02_dot_52 PillowType)\n        (objectType Chair_bar__minus_00_dot_13_bar__plus_00_dot_53_bar__minus_01_dot_58 ChairType)\n        (objectType Bowl_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_01_dot_36 BowlType)\n        (objectType CD_bar__minus_02_dot_24_bar__plus_00_dot_04_bar__plus_02_dot_68 CDType)\n        (objectType Blinds_bar__plus_00_dot_60_bar__plus_02_dot_16_bar__minus_01_dot_92 BlindsType)\n        (objectType BasketBall_bar__plus_01_dot_98_bar__plus_00_dot_12_bar__plus_00_dot_21 BasketBallType)\n        (objectType CreditCard_bar__minus_00_dot_74_bar__plus_00_dot_86_bar__minus_01_dot_53 CreditCardType)\n        (objectType Pencil_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_00_dot_66 PencilType)\n        (objectType KeyChain_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_83 KeyChainType)\n        (objectType Pen_bar__minus_00_dot_47_bar__plus_00_dot_65_bar__minus_00_dot_69 PenType)\n        (objectType Bowl_bar__minus_02_dot_05_bar__plus_01_dot_35_bar__plus_00_dot_37 BowlType)\n        (objectType Laptop_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_00_dot_79 LaptopType)\n        (canContain DrawerType PenType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType CDType)\n        (canContain DrawerType PencilType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType BookType)\n        (canContain DrawerType PenType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType CDType)\n        (canContain DrawerType PencilType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType BookType)\n        (canContain DrawerType PenType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType CDType)\n        (canContain DrawerType PencilType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType BookType)\n        (canContain DrawerType PenType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType CDType)\n        (canContain DrawerType PencilType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType BookType)\n        (canContain DeskType LaptopType)\n        (canContain DeskType AlarmClockType)\n        (canContain DeskType PenType)\n        (canContain DeskType CellPhoneType)\n        (canContain DeskType BowlType)\n        (canContain DeskType CreditCardType)\n        (canContain DeskType CDType)\n        (canContain DeskType PencilType)\n        (canContain DeskType KeyChainType)\n        (canContain DeskType MugType)\n        (canContain DeskType BasketBallType)\n        (canContain DeskType BookType)\n        (canContain ShelfType AlarmClockType)\n        (canContain ShelfType PenType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BowlType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType CDType)\n        (canContain ShelfType PencilType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType MugType)\n        (canContain ShelfType BookType)\n        (canContain DrawerType PenType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType CDType)\n        (canContain DrawerType PencilType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType BookType)\n        (canContain ShelfType AlarmClockType)\n        (canContain ShelfType PenType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BowlType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType CDType)\n        (canContain ShelfType PencilType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType MugType)\n        (canContain ShelfType BookType)\n        (canContain ShelfType AlarmClockType)\n        (canContain ShelfType PenType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BowlType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType CDType)\n        (canContain ShelfType PencilType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType MugType)\n        (canContain ShelfType BookType)\n        (canContain DrawerType PenType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType CDType)\n        (canContain DrawerType PencilType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType BookType)\n        (canContain ShelfType AlarmClockType)\n        (canContain ShelfType PenType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BowlType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType CDType)\n        (canContain ShelfType PencilType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType MugType)\n        (canContain ShelfType BookType)\n        (canContain SafeType CellPhoneType)\n        (canContain SafeType KeyChainType)\n        (canContain SafeType CreditCardType)\n        (canContain SafeType CDType)\n        (canContain ShelfType AlarmClockType)\n        (canContain ShelfType PenType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BowlType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType CDType)\n        (canContain ShelfType PencilType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType MugType)\n        (canContain ShelfType BookType)\n        (canContain GarbageCanType PenType)\n        (canContain GarbageCanType CDType)\n        (canContain GarbageCanType PencilType)\n        (canContain BedType CellPhoneType)\n        (canContain BedType BaseballBatType)\n        (canContain BedType PillowType)\n        (canContain BedType LaptopType)\n        (canContain BedType BasketBallType)\n        (canContain BedType BookType)\n        (canContain ShelfType AlarmClockType)\n        (canContain ShelfType PenType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BowlType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType CDType)\n        (canContain ShelfType PencilType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType MugType)\n        (canContain ShelfType BookType)\n        (canContain DeskType LaptopType)\n        (canContain DeskType AlarmClockType)\n        (canContain DeskType PenType)\n        (canContain DeskType CellPhoneType)\n        (canContain DeskType BowlType)\n        (canContain DeskType CreditCardType)\n        (canContain DeskType CDType)\n        (canContain DeskType PencilType)\n        (canContain DeskType KeyChainType)\n        (canContain DeskType MugType)\n        (canContain DeskType BasketBallType)\n        (canContain DeskType BookType)\n        (pickupable AlarmClock_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_53)\n        (pickupable Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_01_dot_37)\n        (pickupable Pen_bar__minus_00_dot_79_bar__plus_00_dot_21_bar__minus_00_dot_34)\n        (pickupable KeyChain_bar__minus_01_dot_83_bar__plus_00_dot_39_bar__plus_00_dot_65)\n        (pickupable Book_bar__plus_01_dot_00_bar__plus_00_dot_78_bar__plus_02_dot_52)\n        (pickupable Book_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_01_dot_08)\n        (pickupable Mug_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_70)\n        (pickupable Bowl_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_58)\n        (pickupable AlarmClock_bar__minus_01_dot_34_bar__plus_01_dot_72_bar__plus_00_dot_49)\n        (pickupable CellPhone_bar__minus_02_dot_03_bar__plus_00_dot_04_bar__plus_02_dot_47)\n        (pickupable CreditCard_bar__minus_01_dot_83_bar__plus_01_dot_35_bar__plus_00_dot_53)\n        (pickupable Laptop_bar__plus_00_dot_80_bar__plus_00_dot_78_bar__plus_01_dot_08)\n        (pickupable Pencil_bar__minus_01_dot_92_bar__plus_00_dot_88_bar__plus_00_dot_75)\n        (pickupable BaseballBat_bar__plus_01_dot_95_bar__plus_00_dot_66_bar__minus_01_dot_81)\n        (pickupable AlarmClock_bar__minus_01_dot_18_bar__plus_01_dot_72_bar__plus_00_dot_45)\n        (pickupable CreditCard_bar__minus_00_dot_55_bar__plus_00_dot_36_bar__minus_00_dot_93)\n        (pickupable Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_02_dot_52)\n        (pickupable Bowl_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_01_dot_36)\n        (pickupable CD_bar__minus_02_dot_24_bar__plus_00_dot_04_bar__plus_02_dot_68)\n        (pickupable BasketBall_bar__plus_01_dot_98_bar__plus_00_dot_12_bar__plus_00_dot_21)\n        (pickupable CreditCard_bar__minus_00_dot_74_bar__plus_00_dot_86_bar__minus_01_dot_53)\n        (pickupable Pencil_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_00_dot_66)\n        (pickupable KeyChain_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_83)\n        (pickupable Pen_bar__minus_00_dot_47_bar__plus_00_dot_65_bar__minus_00_dot_69)\n        (pickupable Bowl_bar__minus_02_dot_05_bar__plus_01_dot_35_bar__plus_00_dot_37)\n        (pickupable Laptop_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_00_dot_79)\n        (isReceptacleObject Mug_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_70)\n        (isReceptacleObject Bowl_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_58)\n        (isReceptacleObject Bowl_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_01_dot_36)\n        (isReceptacleObject Bowl_bar__minus_02_dot_05_bar__plus_01_dot_35_bar__plus_00_dot_37)\n        (openable Drawer_bar__minus_00_dot_51_bar__plus_00_dot_19_bar__minus_00_dot_85)\n        (openable Drawer_bar__minus_02_dot_07_bar__plus_00_dot_74_bar__plus_00_dot_73)\n        (openable Drawer_bar__minus_00_dot_51_bar__plus_00_dot_72_bar__minus_00_dot_85)\n        (openable Safe_bar__minus_02_dot_18_bar__plus_00_dot_00_bar__plus_02_dot_58)\n        \n        (atLocation agent1 loc_bar__minus_2_bar_3_bar_3_bar_30)\n        \n        (cleanable Mug_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_70)\n        (cleanable Bowl_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_58)\n        (cleanable Bowl_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_01_dot_36)\n        (cleanable Bowl_bar__minus_02_dot_05_bar__plus_01_dot_35_bar__plus_00_dot_37)\n        \n        (heatable Mug_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_70)\n        (coolable Mug_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_70)\n        (coolable Bowl_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_58)\n        (coolable Bowl_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_01_dot_36)\n        (coolable Bowl_bar__minus_02_dot_05_bar__plus_01_dot_35_bar__plus_00_dot_37)\n        \n        \n        (toggleable DeskLamp_bar__minus_02_dot_30_bar__plus_00_dot_87_bar__plus_00_dot_75)\n        \n        \n        \n        \n        (inReceptacle DeskLamp_bar__minus_02_dot_30_bar__plus_00_dot_87_bar__plus_00_dot_75 Desk_bar__minus_01_dot_58_bar__plus_00_dot_02_bar__plus_00_dot_67)\n        (inReceptacle KeyChain_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_83 Desk_bar__minus_01_dot_58_bar__plus_00_dot_02_bar__plus_00_dot_67)\n        (inReceptacle Bowl_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_58 Desk_bar__minus_01_dot_58_bar__plus_00_dot_02_bar__plus_00_dot_67)\n        (inReceptacle Pencil_bar__minus_01_dot_92_bar__plus_00_dot_88_bar__plus_00_dot_75 Desk_bar__minus_01_dot_58_bar__plus_00_dot_02_bar__plus_00_dot_67)\n        (inReceptacle CreditCard_bar__minus_00_dot_55_bar__plus_00_dot_36_bar__minus_00_dot_93 Drawer_bar__minus_00_dot_51_bar__plus_00_dot_47_bar__minus_00_dot_85)\n        (inReceptacle KeyChain_bar__minus_01_dot_83_bar__plus_00_dot_39_bar__plus_00_dot_65 Drawer_bar__minus_02_dot_07_bar__plus_00_dot_49_bar__plus_00_dot_73)\n        (inReceptacle AlarmClock_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_53 Desk_bar__minus_00_dot_57_bar__plus_00_dot_00_bar__minus_01_dot_35)\n        (inReceptacle Mug_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_70 Desk_bar__minus_00_dot_57_bar__plus_00_dot_00_bar__minus_01_dot_35)\n        (inReceptacle CreditCard_bar__minus_00_dot_74_bar__plus_00_dot_86_bar__minus_01_dot_53 Desk_bar__minus_00_dot_57_bar__plus_00_dot_00_bar__minus_01_dot_35)\n        (inReceptacle Pencil_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_00_dot_66 Desk_bar__minus_00_dot_57_bar__plus_00_dot_00_bar__minus_01_dot_35)\n        (inReceptacle Bowl_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_01_dot_36 Desk_bar__minus_00_dot_57_bar__plus_00_dot_00_bar__minus_01_dot_35)\n        (inReceptacle Book_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_01_dot_08 Bed_bar__plus_01_dot_23_bar__plus_00_dot_00_bar__plus_01_dot_67)\n        (inReceptacle Laptop_bar__plus_00_dot_80_bar__plus_00_dot_78_bar__plus_01_dot_08 Bed_bar__plus_01_dot_23_bar__plus_00_dot_00_bar__plus_01_dot_67)\n        (inReceptacle Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_01_dot_37 Bed_bar__plus_01_dot_23_bar__plus_00_dot_00_bar__plus_01_dot_67)\n        (inReceptacle Laptop_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_00_dot_79 Bed_bar__plus_01_dot_23_bar__plus_00_dot_00_bar__plus_01_dot_67)\n        (inReceptacle Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_02_dot_52 Bed_bar__plus_01_dot_23_bar__plus_00_dot_00_bar__plus_01_dot_67)\n        (inReceptacle Book_bar__plus_01_dot_00_bar__plus_00_dot_78_bar__plus_02_dot_52 Bed_bar__plus_01_dot_23_bar__plus_00_dot_00_bar__plus_01_dot_67)\n        (inReceptacle Pen_bar__minus_00_dot_47_bar__plus_00_dot_65_bar__minus_00_dot_69 Drawer_bar__minus_00_dot_51_bar__plus_00_dot_72_bar__minus_00_dot_85)\n        (inReceptacle Pen_bar__minus_00_dot_79_bar__plus_00_dot_21_bar__minus_00_dot_34 GarbageCan_bar__minus_00_dot_75_bar__plus_00_dot_00_bar__minus_00_dot_34)\n        (inReceptacle AlarmClock_bar__minus_01_dot_18_bar__plus_01_dot_72_bar__plus_00_dot_45 Shelf_bar__minus_01_dot_29_bar__plus_01_dot_72_bar__plus_00_dot_41)\n        (inReceptacle AlarmClock_bar__minus_01_dot_34_bar__plus_01_dot_72_bar__plus_00_dot_49 Shelf_bar__minus_01_dot_29_bar__plus_01_dot_72_bar__plus_00_dot_41)\n        (inReceptacle CreditCard_bar__minus_01_dot_83_bar__plus_01_dot_35_bar__plus_00_dot_53 Shelf_bar__minus_01_dot_96_bar__plus_01_dot_34_bar__plus_00_dot_41)\n        (inReceptacle Bowl_bar__minus_02_dot_05_bar__plus_01_dot_35_bar__plus_00_dot_37 Shelf_bar__minus_01_dot_96_bar__plus_01_dot_34_bar__plus_00_dot_41)\n        (inReceptacle DeskLamp_bar__minus_02_dot_30_bar__plus_00_dot_87_bar__plus_00_dot_75 Shelf_bar__minus_01_dot_96_bar__plus_00_dot_87_bar__plus_00_dot_41)\n        (inReceptacle Bowl_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_58 Shelf_bar__minus_01_dot_96_bar__plus_00_dot_87_bar__plus_00_dot_41)\n        (inReceptacle CellPhone_bar__minus_02_dot_03_bar__plus_00_dot_04_bar__plus_02_dot_47 Safe_bar__minus_02_dot_18_bar__plus_00_dot_00_bar__plus_02_dot_58)\n        \n        \n        (receptacleAtLocation Bed_bar__plus_01_dot_23_bar__plus_00_dot_00_bar__plus_01_dot_67 loc_bar__minus_1_bar_6_bar_1_bar_45)\n        (receptacleAtLocation Desk_bar__minus_00_dot_57_bar__plus_00_dot_00_bar__minus_01_dot_35 loc_bar_1_bar__minus_5_bar_3_bar_60)\n        (receptacleAtLocation Desk_bar__minus_01_dot_58_bar__plus_00_dot_02_bar__plus_00_dot_67 loc_bar__minus_1_bar_3_bar_3_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_00_dot_51_bar__plus_00_dot_19_bar__minus_00_dot_85 loc_bar_2_bar__minus_6_bar_3_bar_60)\n        (receptacleAtLocation Drawer_bar__minus_00_dot_51_bar__plus_00_dot_47_bar__minus_00_dot_85 loc_bar_0_bar__minus_3_bar_3_bar_60)\n        (receptacleAtLocation Drawer_bar__minus_00_dot_51_bar__plus_00_dot_72_bar__minus_00_dot_85 loc_bar_1_bar__minus_5_bar_3_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_02_dot_07_bar__plus_00_dot_21_bar__plus_00_dot_73 loc_bar__minus_8_bar_5_bar_2_bar_60)\n        (receptacleAtLocation Drawer_bar__minus_02_dot_07_bar__plus_00_dot_49_bar__plus_00_dot_73 loc_bar__minus_8_bar_5_bar_2_bar_60)\n        (receptacleAtLocation Drawer_bar__minus_02_dot_07_bar__plus_00_dot_74_bar__plus_00_dot_73 loc_bar__minus_5_bar_6_bar_3_bar_45)\n        (receptacleAtLocation GarbageCan_bar__minus_00_dot_75_bar__plus_00_dot_00_bar__minus_00_dot_34 loc_bar_1_bar_0_bar_3_bar_60)\n        (receptacleAtLocation LaundryHamper_bar__plus_00_dot_16_bar__plus_00_dot_01_bar__plus_02_dot_64 loc_bar_0_bar_9_bar_0_bar_60)\n        (receptacleAtLocation Safe_bar__minus_02_dot_18_bar__plus_00_dot_00_bar__plus_02_dot_58 loc_bar__minus_4_bar_8_bar_3_bar_60)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_29_bar__plus_00_dot_87_bar__plus_00_dot_41 loc_bar__minus_4_bar_6_bar_2_bar_30)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_29_bar__plus_01_dot_34_bar__plus_00_dot_41 loc_bar__minus_2_bar_2_bar_3_bar_15)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_29_bar__plus_01_dot_72_bar__plus_00_dot_41 loc_bar__minus_4_bar_5_bar_2_bar_0)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_96_bar__plus_00_dot_87_bar__plus_00_dot_41 loc_bar__minus_7_bar_6_bar_2_bar_30)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_96_bar__plus_01_dot_34_bar__plus_00_dot_41 loc_bar__minus_3_bar_4_bar_3_bar_15)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_96_bar__plus_01_dot_72_bar__plus_00_dot_41 loc_bar__minus_7_bar_5_bar_2_bar_0)\n        (objectAtLocation Pencil_bar__minus_01_dot_92_bar__plus_00_dot_88_bar__plus_00_dot_75 loc_bar__minus_1_bar_3_bar_3_bar_45)\n        (objectAtLocation CreditCard_bar__minus_00_dot_74_bar__plus_00_dot_86_bar__minus_01_dot_53 loc_bar_1_bar__minus_5_bar_3_bar_60)\n        (objectAtLocation KeyChain_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_83 loc_bar__minus_1_bar_3_bar_3_bar_45)\n        (objectAtLocation Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_02_dot_52 loc_bar__minus_1_bar_6_bar_1_bar_45)\n        (objectAtLocation Bowl_bar__minus_01_dot_74_bar__plus_00_dot_88_bar__plus_00_dot_58 loc_bar__minus_7_bar_6_bar_2_bar_30)\n        (objectAtLocation Laptop_bar__plus_00_dot_80_bar__plus_00_dot_78_bar__plus_01_dot_08 loc_bar__minus_1_bar_6_bar_1_bar_45)\n        (objectAtLocation Pen_bar__minus_00_dot_47_bar__plus_00_dot_65_bar__minus_00_dot_69 loc_bar_1_bar__minus_5_bar_3_bar_45)\n        (objectAtLocation AlarmClock_bar__minus_01_dot_18_bar__plus_01_dot_72_bar__plus_00_dot_45 loc_bar__minus_4_bar_5_bar_2_bar_0)\n        (objectAtLocation Book_bar__plus_01_dot_00_bar__plus_00_dot_78_bar__plus_02_dot_52 loc_bar__minus_1_bar_6_bar_1_bar_45)\n        (objectAtLocation AlarmClock_bar__minus_01_dot_34_bar__plus_01_dot_72_bar__plus_00_dot_49 loc_bar__minus_4_bar_5_bar_2_bar_0)\n        (objectAtLocation CreditCard_bar__minus_01_dot_83_bar__plus_01_dot_35_bar__plus_00_dot_53 loc_bar__minus_3_bar_4_bar_3_bar_15)\n        (objectAtLocation Bowl_bar__minus_02_dot_05_bar__plus_01_dot_35_bar__plus_00_dot_37 loc_bar__minus_3_bar_4_bar_3_bar_15)\n        (objectAtLocation Chair_bar__minus_01_dot_42_bar__plus_00_dot_53_bar__plus_00_dot_81 loc_bar__minus_7_bar_5_bar_2_bar_60)\n        (objectAtLocation Book_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_01_dot_08 loc_bar__minus_1_bar_6_bar_1_bar_45)\n        (objectAtLocation LaundryHamperLid_bar__plus_00_dot_16_bar__plus_00_dot_48_bar__plus_02_dot_64 loc_bar_0_bar_9_bar_0_bar_60)\n        (objectAtLocation Chair_bar__minus_00_dot_13_bar__plus_00_dot_53_bar__minus_01_dot_58 loc_bar_2_bar__minus_6_bar_3_bar_60)\n        (objectAtLocation LightSwitch_bar__plus_02_dot_15_bar__plus_01_dot_23_bar__minus_00_dot_52 loc_bar_6_bar__minus_2_bar_1_bar_30)\n        (objectAtLocation AlarmClock_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_53 loc_bar_1_bar__minus_5_bar_3_bar_60)\n        (objectAtLocation BasketBall_bar__plus_01_dot_98_bar__plus_00_dot_12_bar__plus_00_dot_21 loc_bar_6_bar_0_bar_1_bar_60)\n        (objectAtLocation Pen_bar__minus_00_dot_79_bar__plus_00_dot_21_bar__minus_00_dot_34 loc_bar_1_bar_0_bar_3_bar_60)\n        (objectAtLocation Laptop_bar__plus_01_dot_21_bar__plus_00_dot_78_bar__plus_00_dot_79 loc_bar__minus_1_bar_6_bar_1_bar_45)\n        (objectAtLocation BaseballBat_bar__plus_01_dot_95_bar__plus_00_dot_66_bar__minus_01_dot_81 loc_bar_6_bar__minus_5_bar_2_bar_60)\n        (objectAtLocation Bowl_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_01_dot_36 loc_bar_1_bar__minus_5_bar_3_bar_60)\n        (objectAtLocation Pillow_bar__plus_01_dot_61_bar__plus_00_dot_92_bar__plus_01_dot_37 loc_bar__minus_1_bar_6_bar_1_bar_45)\n        (objectAtLocation KeyChain_bar__minus_01_dot_83_bar__plus_00_dot_39_bar__plus_00_dot_65 loc_bar__minus_8_bar_5_bar_2_bar_60)\n        (objectAtLocation CreditCard_bar__minus_00_dot_55_bar__plus_00_dot_36_bar__minus_00_dot_93 loc_bar_0_bar__minus_3_bar_3_bar_60)\n        (objectAtLocation CellPhone_bar__minus_02_dot_03_bar__plus_00_dot_04_bar__plus_02_dot_47 loc_bar__minus_4_bar_8_bar_3_bar_60)\n        (objectAtLocation Mirror_bar__minus_01_dot_36_bar__plus_01_dot_43_bar__plus_02_dot_86 loc_bar__minus_5_bar_9_bar_0_bar_15)\n        (objectAtLocation DeskLamp_bar__minus_02_dot_30_bar__plus_00_dot_87_bar__plus_00_dot_75 loc_bar__minus_7_bar_6_bar_2_bar_30)\n        (objectAtLocation CD_bar__minus_02_dot_24_bar__plus_00_dot_04_bar__plus_02_dot_68 loc_bar__minus_8_bar_8_bar_0_bar_60)\n        (objectAtLocation Window_bar__minus_00_dot_42_bar__plus_01_dot_53_bar__minus_01_dot_95 loc_bar_2_bar__minus_6_bar_3_bar_0)\n        (objectAtLocation Window_bar__plus_00_dot_58_bar__plus_01_dot_53_bar__minus_01_dot_95 loc_bar_2_bar__minus_5_bar_2_bar_15)\n        (objectAtLocation Pencil_bar__minus_00_dot_82_bar__plus_00_dot_86_bar__minus_00_dot_66 loc_bar_1_bar__minus_5_bar_3_bar_60)\n        (objectAtLocation Mug_bar__minus_00_dot_48_bar__plus_00_dot_86_bar__minus_01_dot_70 loc_bar_1_bar__minus_5_bar_3_bar_60)\n        (objectAtLocation Blinds_bar__plus_00_dot_60_bar__plus_02_dot_16_bar__minus_01_dot_92 loc_bar_2_bar__minus_6_bar_2_bar__minus_30)\n        (objectAtLocation Blinds_bar__minus_00_dot_40_bar__plus_02_dot_16_bar__minus_01_dot_92 loc_bar_2_bar__minus_6_bar_3_bar__minus_30)\n        )\n    \n\n        (:goal\n            (and\n                (exists (?r - receptacle)\n                    (exists (?o - object)\n                        (and\n                            (inReceptacle ?o ?r)\n                            (objectType ?o PencilType)\n                            (receptacleType ?r ShelfType)\n                        )\n                    )\n                )\n            )\n        )\n    )\n    ", "solvable": true}