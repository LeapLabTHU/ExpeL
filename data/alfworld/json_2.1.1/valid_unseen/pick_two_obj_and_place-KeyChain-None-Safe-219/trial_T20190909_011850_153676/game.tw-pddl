{"pddl_domain": ";; Specification in PDDL of the Alfred domain\n;; Intended to be used with Fast Downward which supports PDDL 2.2 level 1 plus the :action-costs requirement from PDDL 3.1.\n\n(define (domain alfred)\n (:requirements\n    :adl\n    :action-costs\n    :typing\n )\n (:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n\n\n (:predicates\n    (atLocation ?a - agent ?l - location)                     ; true if the agent is at the location\n    (receptacleAtLocation ?r - receptacle ?l - location)      ; true if the receptacle is at the location (constant)\n    (objectAtLocation ?o - object ?l - location)              ; true if the object is at the location\n    (openable ?r - receptacle)                                ; true if a receptacle is openable\n    (opened ?r - receptacle)                                  ; true if a receptacle is opened\n    (inReceptacle ?o - object ?r - receptacle)                ; object ?o is in receptacle ?r\n    (isReceptacleObject ?o - object)                          ; true if the object can have things put inside it\n    (inReceptacleObject ?innerObject - object ?outerObject - object)                ; object ?innerObject is inside object ?outerObject\n    (isReceptacleObjectFull ?o - object)                      ; true if the receptacle object contains something\n    (wasInReceptacle ?o - object ?r - receptacle)             ; object ?o was or is in receptacle ?r now or some time in the past\n    (checked ?r - receptacle)                                 ; whether the receptacle has been looked inside/visited\n    (examined ?l - location)                                  ; TODO\n    (receptacleType ?r - receptacle ?t - rtype)               ; the type of receptacle (Cabinet vs Cabinet|01|2...)\n    (canContain ?rt - rtype ?ot - otype)                      ; true if receptacle can hold object\n    (objectType ?o - object ?t - otype)                       ; the type of object (Apple vs Apple|01|2...)\n    (holds ?a - agent ?o - object)                            ; object ?o is held by agent ?a\n    (holdsAny ?a - agent)                                     ; agent ?a holds an object\n    (holdsAnyReceptacleObject ?a - agent)                        ; agent ?a holds a receptacle object\n    (full ?r - receptacle)                                    ; true if the receptacle has no remaining space\n    (isClean ?o - object)                                     ; true if the object has been clean in sink\n    (cleanable ?o - object)                                   ; true if the object can be placed in a sink\n    (isHot ?o - object)                                       ; true if the object has been heated up\n    (heatable ?o - object)                                    ; true if the object can be heated up in a microwave\n    (isCool ?o - object)                                      ; true if the object has been cooled\n    (coolable ?o - object)                                    ; true if the object can be cooled in the fridge\n    (pickupable ?o - object)                                   ; true if the object can be picked up\n    (moveable ?o - object)                                      ; true if the object can be moved\n    (toggleable ?o - object)                                  ; true if the object can be turned on/off\n    (isOn ?o - object)                                        ; true if the object is on\n    (isToggled ?o - object)                                   ; true if the object has been toggled\n    (sliceable ?o - object)                                   ; true if the object can be sliced\n    (isSliced ?o - object)                                    ; true if the object is sliced\n )\n\n  (:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;; All actions are specified such that the final arguments are the ones used\n;; for performing actions in Unity.\n\n\n(:action look\n    :parameters (?a - agent ?l - location)\n    :precondition\n        (and\n            (atLocation ?a ?l)\n        )\n    :effect\n        (and\n            (checked ?l)\n        )\n)\n\n(:action inventory\n    :parameters (?a - agent)\n    :precondition\n        ()\n    :effect\n        (and\n            (checked ?a)\n        )\n)\n\n(:action examineReceptacle\n    :parameters (?a - agent ?r - receptacle)\n    :precondition\n        (and\n            (exists (?l - location)\n                (and\n                    (atLocation ?a ?l)\n                    (receptacleAtLocation ?r ?l)\n                )\n            )\n        )\n    :effect\n        (and\n            (checked ?r)\n        )\n)\n\n(:action examineObject\n    :parameters (?a - agent ?o - object)\n    :precondition\n        (or\n            ;(exists (?l - location)\n            ;    (and\n            ;        (atLocation ?a ?l)\n            ;        (objectAtLocation ?o ?l)\n            ;    )\n            ;)\n            (exists (?l - location, ?r - receptacle)\n                (and\n                    (atLocation ?a ?l)\n                    (receptacleAtLocation ?r ?l)\n                    ; (objectAtLocation ?o ?l)\n                    (inReceptacle ?o ?r)\n                    (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n              )\n            )\n            (holds ?a ?o)\n        )\n    :effect\n        (and\n            (checked ?o)\n        )\n)\n\n;; agent goes to receptacle\n (:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    ;(exists (?r - receptacle) (receptacleAtLocation ?r ?lEnd))\n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                ; (forall (?r - receptacle)\n                ;     (when (and (receptacleAtLocation ?r ?lEnd)\n                ;                (or (not (openable ?r)) (opened ?r)))\n                ;         (checked ?r)\n                ;     )\n                ; )\n                ; (increase (total-cost) (distance ?lStart ?lEnd))\n                (increase (total-cost) 1)\n            )\n )\n\n;; agent opens receptacle\n (:action OpenObject\n    :parameters (?a - agent ?l - location ?r - receptacle)\n    :precondition (and\n            (openable ?r)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (not (opened ?r))\n            )\n    :effect (and\n                (opened ?r)\n                (checked ?r)\n                (increase (total-cost) 1)\n            )\n )\n;; agent closes receptacle\n (:action CloseObject\n    :parameters (?a - agent ?l - location ?r - receptacle)\n    :precondition (and\n            (openable ?r)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (opened ?r)\n            )\n    :effect (and\n                (not (opened ?r))\n                (increase (total-cost) 1)\n            )\n\n )\n\n ;; agent picks up object from a receptacle\n (:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            ; (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  ; agent's hands are empty.\n            ;(not (holdsAnyReceptacleObject ?a))\n            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n            ;(not (isReceptacleObject ?o))\n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            ;(not (full ?r))\n            (increase (total-cost) 1)\n        )\n )\n\n\n; ;; agent picks up object from a receptacle\n; (:action PickupObjectFromReceptacleObject\n;    :parameters (?a - agent ?l - location ?o - object ?outerR - object ?r - receptacle)\n;    :precondition\n;        (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (inReceptacle ?o ?r)\n;            (pickupable ?o)\n;            (not (holdsAny ?a))  ; agent's hands are empty.\n;            (not (holdsAnyReceptacleObject ?a))\n;            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n;            (not (isReceptacleObject ?o))\n;            (isReceptacleObject ?outerR)\n;            (inReceptacleObject ?o ?outerR)\n;        )\n;    :effect\n;        (and\n;            (not (inReceptacle ?o ?r))\n;            (holds ?a ?o)\n;            (holdsAny ?a)\n;            (not (objectAtLocation ?o ?l))\n;            (not (full ?r))\n;            (increase (total-cost) 1)\n;\n;            (not (inReceptacleObject ?o ?outerR))\n;            (not (isReceptacleObjectFull ?outerR))\n;        )\n; )\n;\n; ;; agent picks up object from a receptacle\n; (:action PickupEmptyReceptacleObject\n;    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n;    :precondition\n;        (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            ; (objectAtLocation ?o ?l)\n;            (inReceptacle ?o ?r)\n;            (pickupable ?o)\n;            (not (holdsAny ?a))  ; agent's hands are empty.\n;            (not (holdsAnyReceptacleObject ?a))\n;            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n;            (isReceptacleObject ?o)\n;            (not (isReceptacleObjectFull ?o))\n;        )\n;    :effect\n;        (and\n;            (not (inReceptacle ?o ?r))\n;            (holds ?a ?o)\n;            (holdsAny ?a)\n;            (not (objectAtLocation ?o ?l))\n;            (not (full ?r))\n;            (increase (total-cost) 1)\n;            (holdsAnyReceptacleObject ?a)\n;        )\n; )\n;\n; ;; agent picks up object from a receptacle\n; (:action PickupFullReceptacleObject\n;    :parameters (?a - agent ?l - location ?o - object ?outerR - object ?r - receptacle)\n;    :precondition\n;        (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (inReceptacle ?outerR ?r)\n;            (pickupable ?outerR)\n;            (not (holdsAny ?a))  ; agent's hands are empty.\n;            (not (holdsAnyReceptacleObject ?a))\n;            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n;            (not (isReceptacleObject ?o))\n;            (isReceptacleObject ?outerR)\n;            (inReceptacleObject ?o ?outerR)\n;        )\n;    :effect\n;        (and\n;            (not (inReceptacle ?o ?r))\n;            (not (inReceptacle ?outerR ?r))\n;            (holds ?a ?outerR)\n;            (holdsAny ?a)\n;            (not (objectAtLocation ?o ?l))\n;            (not (objectAtLocation ?outerR ?l))\n;            (not (full ?r))\n;            (increase (total-cost) 1)\n;            (holdsAnyReceptacleObject ?a)\n;        )\n; )\n\n\n;; agent puts down an object\n (:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    ; receptacle is opened if it is openable\n            ;(not (full ?r))\n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            ;(not (holdsAnyReceptacleObject ?a))\n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                ;(full ?r)\n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n;;; agent puts down an object\n; (:action PutObjectInReceptacleObject\n;    :parameters (?a - agent ?l - location ?ot - otype ?o - object ?outerO - object ?outerR - receptacle)\n;    :precondition (and\n;            (atLocation ?a ?l)\n;            (objectAtLocation ?outerO ?l)\n;            (isReceptacleObject ?outerO)\n;            (not (isReceptacleObject ?o))\n;            (objectType ?o ?ot)\n;            (holds ?a ?o)\n;            (not (holdsAnyReceptacleObject ?a))\n;            (inReceptacle ?outerO ?outerR)\n;            (not (isReceptacleObjectFull ?outerO))\n;            )\n;    :effect (and\n;                (inReceptacleObject ?o ?outerO)\n;                (inReceptacle ?o ?outerR)\n;                (not (holds ?a ?o))\n;                (not (holdsAny ?a))\n;                (objectAtLocation ?o ?l)\n;                (isReceptacleObjectFull ?outerO)\n;                (increase (total-cost) 1)\n;            )\n; )\n;\n;;; agent puts down an object\n; (:action PutEmptyReceptacleObjectinReceptacle\n;    :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n;    :precondition (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (or (not (openable ?r)) (opened ?r))    ; receptacle is opened if it is openable\n;            (not (full ?r))\n;            (objectType ?o ?ot)\n;            (holds ?a ?o)\n;            (holdsAnyReceptacleObject ?a)\n;            (isReceptacleObject ?o)\n;            (not (isReceptacleObjectFull ?o))\n;            )\n;    :effect (and\n;                (inReceptacle ?o ?r)\n;                (objectAtLocation ?o ?l)\n;                (full ?r)\n;                (not (holds ?a ?o))\n;                (not (holdsAny ?a))\n;                (not (holdsAnyReceptacleObject ?a))\n;                (increase (total-cost) 1)\n;            )\n; )\n;\n;;; agent puts down a receptacle object in a receptacle\n; (:action PutFullReceptacleObjectInReceptacle\n;    :parameters (?a - agent ?l - location ?ot - otype ?innerO - object ?outerO - object ?r - receptacle) ; ?rt - rtype)\n;    :precondition (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (objectType ?outerO ?ot)\n;            (holds ?a ?outerO)\n;            (holdsAnyReceptacleObject ?a)\n;            (isReceptacleObject ?outerO)\n;            (isReceptacleObjectFull ?outerO)\n;            (inReceptacleObject ?innerO ?outerO)\n;            )\n;    :effect (and\n;                (not (holdsAny ?a))\n;                (not (holdsAnyReceptacleObject ?a))\n;                (objectAtLocation ?outerO ?l)\n;                (objectAtLocation ?innerO ?l)\n;                (inReceptacle ?outerO ?r)\n;                (inReceptacle ?innerO ?r)\n;                (not (holds ?a ?outerO))\n;                (increase (total-cost) 1)\n;            )\n; )\n\n;; agent cleans some object\n (:action CleanObject\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n    :precondition (and\n            (cleanable ?o)\n            (or\n                (receptacleType ?r SinkType)\n                (receptacleType ?r SinkBasinType)\n            )\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isClean ?o)\n            )\n )\n\n\n;; agent heats-up some object\n (:action HeatObject\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n    :precondition (and\n            (heatable ?o)\n            (or\n                (receptacleType ?r MicrowaveType)\n            )\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isHot ?o)\n                (not (isCool ?o))\n            )\n )\n\n;; agent cools some object\n (:action CoolObject\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n    :precondition (and\n            (coolable ?o)\n            (or\n                (receptacleType ?r FridgeType)\n            )\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isCool ?o)\n                (not (isHot ?o))\n            )\n )\n\n\n;; agent toggle object\n (:action ToggleObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition (and\n            (toggleable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (inReceptacle ?o ?r)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (when (isOn ?o)\n                    (not (isOn ?o)))\n                (when (not (isOn ?o))\n                    (isOn ?o))\n                (isToggled ?o)\n            )\n )\n\n\n;; agent slices some object with a knife\n (:action SliceObject\n    :parameters (?a - agent ?l - location ?co - object ?ko - object)\n    :precondition\n            (and\n                (sliceable ?co)\n                (or\n                    (objectType ?ko KnifeType)\n                    (objectType ?ko ButterKnifeType)\n                )\n                (atLocation ?a ?l)\n                (objectAtLocation ?co ?l)\n                (holds ?a ?ko)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isSliced ?co)\n            )\n )\n\n\n)\n", "grammar": "grammar :: \"\"\"\n    {\n        \"intro\": [\n            {\n                \"rhs\": \"-= Welcome to TextWorld, ALFRED! =-\\n\\n#look.feedback#\\n\\n#task#\"\n            }\n        ],\n\n        \"notImplemented\": [\n            {\n                \"rhs\": \"TODO\"\n            }\n        ],\n\n        \"task\": [\n            {\n                \"rhs\": \"Your task is to: find two keychain and put them in safe.\"\n            }\n        ],\n\n        \"GotoLocation.feedback\": [\n            {\n                \"rhs\": \"You arrive at {lend.name}. #examineReceptacle.feedback#\"\n            }\n        ],\n\n        \"OpenObject.feedback\": [\n            {\n                \"rhs\": \"You open the {r.name}. #examineReceptacle.feedback#\"\n            }\n        ],\n\n        \"CloseObject.feedback\": [\n            {\n                \"rhs\": \"You close the {r.name}.\"\n            }\n        ],\n\n        \"PickupObject.feedback\": [\n            {\n                \"rhs\": \"You pick up the {o.name} from the {r.name}.\"\n            }\n        ],\n\n        \"PickupObjectFromReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PickupObjectFromReceptacleObject: You pick up the {o.name}.\"\n            }\n        ],\n\n        \"PickupEmptyReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PickupEmptyReceptacleObject: You pick up the {o.name}.\"\n            }\n        ],\n\n        \"PickupFullReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PickupFullReceptacleObject: You pick up the {outerr.name}.\"\n            }\n        ],\n\n        \"PutObject.feedback\": [\n            {\n                \"rhs\": \"You put the {o.name} in/on the {r.name}.\"\n            }\n        ],\n\n        \"PutObjectInReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PutObjectInReceptacleObject: You put the {o.name} in the {outero.name}.\"\n            }\n        ],\n\n        \"PutEmptyReceptacleObjectinReceptacle.feedback\": [\n            {\n                \"rhs\": \"PutEmptyReceptacleObjectinReceptacle: You put the {o.name} in the {r.name}.\"\n            }\n        ],\n\n        \"PutFullReceptacleObjectInReceptacle.feedback\": [\n            {\n                \"rhs\": \"PutFullReceptacleObjectInReceptacle: You put the {outero.name} in the {r.name}.\"\n            }\n        ],\n\n        \"inventory.feedback\": [\n            {\n                \"condition\": \"holdsany(a:agent)\",\n                \"rhs\": \"You are carrying: [{o.indefinite + ' ' + o.name | holds(a:agent, o:object)}].\"\n            },\n            {\n                \"rhs\": \"You are not carrying anything.\"\n            }\n        ],\n\n        \"examineReceptacle.feedback\": [\n            {\n                \"condition\": \"openable(r:receptacle) & opened(r:receptacle)\",\n                \"rhs\": \"The {r.name} is open. In it, you see [{o.indefinite + ' ' + o.name | inreceptacle(o:object, r:receptacle)}].\"\n            },\n            {\n                \"condition\": \"openable(r:receptacle)\",\n                \"rhs\": \"The {r.name} is closed.\"\n            },\n            {\n                \"rhs\": \"On the {r.name}, you see [{o.indefinite + ' ' + o.name | inreceptacle(o:object, r:receptacle)}].\"\n            }\n        ],\n\n        \"examineObject.feedback\": [\n            {\n                \"condition\": \"isreceptacleobject(o:object)\",\n                \"rhs\": \"This is a normal {o.name}. In it, you see [{o2.indefinite + ' ' + o2.name | inreceptacleobject(o2:object, o:object)}].\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & ishot(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a hot and clean sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & iscool(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a cool and clean sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a clean sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"ishot(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a hot sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"iscool(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a cool sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & ishot(o:object)\",\n                \"rhs\": \"This is a hot and clean {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & iscool(o:object)\",\n                \"rhs\": \"This is a cool and clean {o.name}.\"\n            },\n            {\n                \"condition\": \"ishot(o:object)\",\n                \"rhs\": \"This is a hot {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object)\",\n                \"rhs\": \"This is a clean {o.name}.\"\n            },\n            {\n                \"condition\": \"iscool(o:object)\",\n                \"rhs\": \"This is a cold {o.name}.\"\n            },\n            {\n                \"condition\": \"toggleable(o:object) & istoggled(o:object)\",\n                \"rhs\": \"This {o.name} is on.\"\n            },\n            {\n                \"condition\": \"toggleable(o:object) & not_istoggled(o:object)\",\n                \"rhs\": \"This {o.name} is off.\"\n            },\n            {\n                \"condition\": \"sliceable(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a sliced {o.name}.\"\n            },\n            {\n                \"rhs\": \"There's nothing special about {o.name}.\"\n            }\n        ]\n    }\n\"\"\";\n\naction GotoLocation {\n    template :: \"go to [{r.name | receptacleatlocation(r:receptacle, lend:location)}]\";\n    feedback :: \"#GotoLocation.feedback#\";\n}\n\naction OpenObject {\n    template :: \"open {r}\";\n    feedback :: \"#OpenObject.feedback#\";\n}\n\naction CloseObject {\n    template :: \"close {r}\";\n    feedback :: \"#CloseObject.feedback#\";\n}\n\naction PickupObject {\n    template :: \"take {o} from {r}\";\n    feedback :: \"#PickupObject.feedback#\";\n}\n\naction PickupObjectFromReceptacleObject {\n    template :: \"take {o} from {r}\";\n    feedback :: \"#PickupObjectFromReceptacleObject.feedback#\";\n}\n\naction PickupEmptyReceptacleObject {\n    template :: \"take {o} from {r}\";\n    feedback :: \"#PickupEmptyReceptacleObject.feedback#\";\n}\n\naction PickupFullReceptacleObject {\n    template :: \"take {outerr} from {r}\";\n    feedback :: \"#PickupFullReceptacleObject.feedback#\";\n}\n\naction PutObject {\n    template :: \"put {o} in/on {r}\";\n    feedback :: \"#PutObject.feedback#\";\n}\n\naction PutObjectInReceptacleObject {\n    template :: \"put {o} into {outero}\";\n    feedback :: \"#PutObjectInReceptacleObject.feedback#\";\n}\n\naction PutEmptyReceptacleObjectinReceptacle {\n    template :: \"put {o} in/on {r}\";\n    feedback :: \"#PutEmptyReceptacleObjectinReceptacle.feedback#\";\n}\n\naction PutFullReceptacleObjectInReceptacle {\n    template :: \"put {outero} in {r}\";\n    feedback :: \"#PutFullReceptacleObjectInReceptacle.feedback#\";\n}\n\naction inventory {\n    template :: \"inventory\";\n    feedback :: \"#inventory.feedback#\";\n}\n\naction examineReceptacle {\n    template :: \"examine {r}\";\n    feedback :: \"#examineReceptacle.feedback#\";\n}\n\naction examineObject {\n    template :: \"examine {o}\";\n    feedback :: \"#examineObject.feedback#\";\n}\n\naction ToggleObject {\n    template :: \"use {o}\";\n    feedback :: \"#toggleObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"toggleObject.feedback\": [\n                {\n                    \"condition\": \"toggleable(o:object) & istoggled(o:object)\",\n                    \"rhs\": \"You turn on the {o.name}.\"\n                },\n                {\n                    \"condition\": \"toggleable(o:object)\",\n                    \"rhs\": \"You turn off the {o.name}.\"\n                },\n                {\n                    \"rhs\": \"You don't see any switch on the {o.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction HeatObject {\n    template :: \"heat {o} with {r}\";\n    feedback :: \"#heatObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"heatObject.feedback\": [\n                {\n                    \"rhs\": \"You heat the {o.name} using the {r.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction CleanObject {\n    template :: \"clean {o} with {r}\";\n    feedback :: \"#cleanObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"cleanObject.feedback\": [\n                {\n                    \"rhs\": \"You clean the {o.name} using the {r.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction CoolObject {\n    template :: \"cool {o} with {r}\";\n    feedback :: \"#coolObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"coolObject.feedback\": [\n                {\n                    \"rhs\": \"You cool the {o.name} using the {r.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction SliceObject {\n    template :: \"slice {co} with {ko}\";\n    feedback :: \"#sliceObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"sliceObject.feedback\": [\n                {\n                    \"rhs\": \"You sliced the {co.name} with the {ko.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction look {\n    template :: \"look\";\n    feedback :: \"#look.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"look.feedback\": [\n                {\n                   \"condition\": \"atlocation(a:agent, l:location) & receptacleatlocation(r:receptacle, l:location)\",\n                   \"rhs\": \"#look-variations#. Next to it, you see #list_objects_on_the_floor#.\"\n                },\n                {\n                    \"rhs\": \"You are in the middle of a room. Looking quickly around you, you see #list_appliances#.\"\n                }\n            ],\n\n            \"look-variations\": [\n                {\n                    \"rhs\": \"You are facing the [{r.name | atlocation(a:agent, l:location) & receptacleatlocation(r:receptacle, l:location)}]\"\n                }\n            ],\n\n            \"list_objects_on_the_floor\": [\n                {\n                    \"condition\": \"atlocation(a:agent, l:location) & objectatlocation(o:object, l:location) & receptacleatlocation(r:receptacle, l:location) & not_inreceptacle(o:object, r:receptacle)\",\n                    \"rhs\": \"[{#overview(o)# | atlocation(a:agent, l:location) & objectatlocation(o:object, l:location) & receptacleatlocation(r:receptacle, l:location) & not_inreceptacle(o:object, r:receptacle)}]\"\n                },\n                {\n                    \"rhs\": \"nothing\"\n                }\n            ],\n\n            \"list_appliances\": [\n                {\n                    \"condition\": \"receptacleatlocation(r:receptacle, l:location)\",\n                    \"rhs\": \"[{#overview(r)# | receptacleatlocation(r:receptacle, l:location)}]\"\n                },\n                {\n                    \"rhs\": \"nothing\"\n                }\n            ],\n\n            \"overview(o, r)\": [\n                {\n                    \"rhs\": \"{o.indefinite} {o.name} (in/on the {r.name})}\"\n                }\n            ],\n\n            \"overview(o)\": [\n                {\n                    \"rhs\": \"{o.indefinite} {o.name}\"\n                }\n            ],\n            \"overview(r)\": [\n                {\n                    \"rhs\": \"{r.indefinite} {r.name or r.id}\"\n                }\n            ],\n            \"overview_with_state(r)\": [\n                {\n                    \"rhs\": \"{r.indefinite} {r.name or r.id}#overview_state(r)#\"\n                }\n            ],\n            \"overview_state(r)\": [\n                {\n                    \"condition\": \"openable(r:receptacle) & opened(r:receptacle)\",\n                    \"rhs\": \" (it is open)\"\n                },\n                {\n                    \"condition\": \"openable(r:receptacle)\",\n                    \"rhs\": \" (it is closed)\"\n                },\n                {\n                    \"rhs\": \"\"\n                }\n            ],\n\n            \"list_empty\": [\n                {\n                    \"rhs\": \"nothing\"\n                }\n            ],\n            \"list_separator\": [\n                {\n                    \"rhs\": \", \"\n                }\n            ],\n            \"list_last_separator\": [\n                {\n                    \"rhs\": \", and \"\n                }\n            ]\n        }\n    \"\"\";\n}\n", "pddl_problem": "\n(define (problem plan_trial_T20190909_011850_153676)\n(:domain alfred)\n(:objects\nagent1 - agent\nRemoteControl - object\n        Laptop - object\n        Kettle - object\n        Pen - object\n        Fork - object\n        Cloth - object\n        HousePlant - object\n        Plunger - object\n        SoapBottle - object\n        Cup - object\n        Candle - object\n        Tomato - object\n        Television - object\n        TennisRacket - object\n        Towel - object\n        SaltShaker - object\n        Spoon - object\n        Apple - object\n        Poster - object\n        Curtains - object\n        Footstool - object\n        AlarmClock - object\n        Ladle - object\n        PaperTowelRoll - object\n        BaseballBat - object\n        Knife - object\n        Spatula - object\n        SoapBar - object\n        CreditCard - object\n        Sink - object\n        Newspaper - object\n        LaundryHamperLid - object\n        KeyChain - object\n        Glassbottle - object\n        ButterKnife - object\n        Chair - object\n        HandTowel - object\n        ToiletPaperRoll - object\n        Plate - object\n        Pot - object\n        WineBottle - object\n        Boots - object\n        PepperShaker - object\n        PaperTowel - object\n        Bowl - object\n        SprayBottle - object\n        ScrubBrush - object\n        Box - object\n        CD - object\n        Pan - object\n        Statue - object\n        Vase - object\n        ShowerGlass - object\n        DishSponge - object\n        Egg - object\n        Lettuce - object\n        Book - object\n        TeddyBear - object\n        ToiletPaper - object\n        ShowerDoor - object\n        Window - object\n        Blinds - object\n        CellPhone - object\n        FloorLamp - object\n        Pillow - object\n        Mirror - object\n        Painting - object\n        TissueBox - object\n        Pencil - object\n        Potato - object\n        LightSwitch - object\n        StoveKnob - object\n        Mug - object\n        Bathtub - object\n        DeskLamp - object\n        Watch - object\n        WateringCan - object\n        BasketBall - object\n        Bread - object\nRemoteControlType - otype\n        LaptopType - otype\n        KettleType - otype\n        PenType - otype\n        ForkType - otype\n        ClothType - otype\n        HousePlantType - otype\n        PlungerType - otype\n        SoapBottleType - otype\n        CupType - otype\n        CandleType - otype\n        TomatoType - otype\n        TelevisionType - otype\n        TennisRacketType - otype\n        TowelType - otype\n        SaltShakerType - otype\n        SpoonType - otype\n        AppleType - otype\n        PosterType - otype\n        CurtainsType - otype\n        FootstoolType - otype\n        AlarmClockType - otype\n        LadleType - otype\n        PaperTowelRollType - otype\n        BaseballBatType - otype\n        KnifeType - otype\n        SpatulaType - otype\n        SoapBarType - otype\n        CreditCardType - otype\n        SinkType - otype\n        NewspaperType - otype\n        LaundryHamperLidType - otype\n        KeyChainType - otype\n        GlassbottleType - otype\n        ButterKnifeType - otype\n        ChairType - otype\n        HandTowelType - otype\n        ToiletPaperRollType - otype\n        PlateType - otype\n        PotType - otype\n        WineBottleType - otype\n        BootsType - otype\n        PepperShakerType - otype\n        PaperTowelType - otype\n        BowlType - otype\n        SprayBottleType - otype\n        ScrubBrushType - otype\n        BoxType - otype\n        CDType - otype\n        PanType - otype\n        StatueType - otype\n        VaseType - otype\n        ShowerGlassType - otype\n        DishSpongeType - otype\n        EggType - otype\n        LettuceType - otype\n        BookType - otype\n        TeddyBearType - otype\n        ToiletPaperType - otype\n        ShowerDoorType - otype\n        WindowType - otype\n        BlindsType - otype\n        CellPhoneType - otype\n        FloorLampType - otype\n        PillowType - otype\n        MirrorType - otype\n        PaintingType - otype\n        TissueBoxType - otype\n        PencilType - otype\n        PotatoType - otype\n        LightSwitchType - otype\n        StoveKnobType - otype\n        MugType - otype\n        BathtubType - otype\n        DeskLampType - otype\n        WatchType - otype\n        WateringCanType - otype\n        BasketBallType - otype\n        BreadType - otype\nSinkBasinType - rtype\n        GarbageCanType - rtype\n        StoveBurnerType - rtype\n        OttomanType - rtype\n        CabinetType - rtype\n        SideTableType - rtype\n        DiningTableType - rtype\n        CoffeeTableType - rtype\n        SafeType - rtype\n        DresserType - rtype\n        DeskType - rtype\n        BedType - rtype\n        TowelHolderType - rtype\n        ToiletPaperHangerType - rtype\n        MicrowaveType - rtype\n        SofaType - rtype\n        CartType - rtype\n        ArmChairType - rtype\n        HandTowelHolderType - rtype\n        TVStandType - rtype\n        BathtubBasinType - rtype\n        CoffeeMachineType - rtype\n        ToasterType - rtype\n        LaundryHamperType - rtype\n        DrawerType - rtype\n        FridgeType - rtype\n        ToiletType - rtype\n        ShelfType - rtype\n        PaintingHangerType - rtype\n        CounterTopType - rtype\n\n\n        Box_bar__minus_02_dot_91_bar__plus_00_dot_42_bar__plus_04_dot_59 - object\n        CellPhone_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_39 - object\n        CreditCard_bar__minus_02_dot_09_bar__plus_00_dot_59_bar__plus_04_dot_30 - object\n        CreditCard_bar__minus_04_dot_16_bar__plus_01_dot_00_bar__plus_04_dot_34 - object\n        FloorLamp_bar__minus_00_dot_65_bar__plus_00_dot_27_bar__plus_04_dot_43 - object\n        FloorLamp_bar__minus_05_dot_60_bar__plus_00_dot_00_bar__plus_04_dot_64 - object\n        HousePlant_bar__minus_03_dot_97_bar__plus_01_dot_64_bar__plus_00_dot_14 - object\n        KeyChain_bar__minus_00_dot_79_bar__plus_00_dot_61_bar__plus_01_dot_96 - object\n        KeyChain_bar__minus_01_dot_84_bar__plus_00_dot_59_bar__plus_04_dot_12 - object\n        KeyChain_bar__minus_03_dot_86_bar__plus_01_dot_11_bar__plus_04_dot_79 - object\n        Lamp_bar__minus_02_dot_81_bar__plus_01_dot_10_bar__plus_04_dot_52 - object\n        Lamp_bar__minus_04_dot_65_bar__plus_01_dot_03_bar__plus_00_dot_27 - object\n        Laptop_bar__minus_03_dot_39_bar__plus_01_dot_10_bar__plus_04_dot_49 - object\n        Laptop_bar__minus_04_dot_18_bar__plus_01_dot_11_bar__plus_04_dot_49 - object\n        LightSwitch_bar__minus_06_dot_00_bar__plus_01_dot_35_bar__plus_03_dot_40 - object\n        Newspaper_bar__minus_00_dot_79_bar__plus_00_dot_62_bar__plus_03_dot_55 - object\n        Painting_bar__minus_06_dot_02_bar__plus_01_dot_80_bar__plus_04_dot_18 - object\n        Pillow_bar__minus_02_dot_03_bar__plus_00_dot_67_bar__plus_04_dot_42 - object\n        RemoteControl_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_89 - object\n        RemoteControl_bar__minus_03_dot_54_bar__plus_01_dot_11_bar__plus_04_dot_89 - object\n        RemoteControl_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_69 - object\n        Statue_bar__minus_00_dot_26_bar__plus_00_dot_08_bar__plus_01_dot_19 - object\n        Statue_bar__minus_01_dot_46_bar__plus_00_dot_60_bar__plus_00_dot_22 - object\n        Television_bar__minus_03_dot_35_bar__plus_00_dot_70_bar__plus_00_dot_13 - object\n        TissueBox_bar__minus_04_dot_02_bar__plus_00_dot_20_bar__plus_04_dot_59 - object\n        Vase_bar__minus_02_dot_90_bar__plus_01_dot_11_bar__plus_04_dot_79 - object\n        Vase_bar__minus_03_dot_86_bar__plus_01_dot_12_bar__plus_04_dot_39 - object\n        Watch_bar__minus_02_dot_14_bar__plus_00_dot_03_bar__plus_00_dot_32 - object\n        Watch_bar__minus_02_dot_35_bar__plus_00_dot_03_bar__plus_00_dot_21 - object\n        Watch_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_79 - object\n        ArmChair_bar__minus_01_dot_84_bar__minus_00_dot_01_bar__plus_04_dot_51 - receptacle\n        Cabinet_bar__minus_02_dot_70_bar__plus_00_dot_56_bar__plus_04_dot_20 - receptacle\n        Cabinet_bar__minus_03_dot_85_bar__plus_00_dot_56_bar__plus_04_dot_20 - receptacle\n        Cabinet_bar__minus_03_dot_87_bar__plus_00_dot_56_bar__plus_04_dot_20 - receptacle\n        Cabinet_bar__minus_05_dot_02_bar__plus_00_dot_56_bar__plus_04_dot_20 - receptacle\n        Drawer_bar__minus_02_dot_99_bar__plus_01_dot_01_bar__plus_04_dot_30 - receptacle\n        Drawer_bar__minus_03_dot_57_bar__plus_01_dot_01_bar__plus_04_dot_30 - receptacle\n        Drawer_bar__minus_04_dot_16_bar__plus_01_dot_01_bar__plus_04_dot_30 - receptacle\n        Drawer_bar__minus_04_dot_74_bar__plus_01_dot_01_bar__plus_04_dot_30 - receptacle\n        Drawer_bar__minus_05_dot_02_bar__plus_00_dot_88_bar__plus_00_dot_37 - receptacle\n        Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59 - receptacle\n        GarbageCan_bar__minus_05_dot_80_bar__plus_00_dot_00_bar__plus_04_dot_07 - receptacle\n        Safe_bar__minus_02_dot_30_bar__minus_00_dot_01_bar__plus_00_dot_27 - receptacle\n        Shelf_bar__minus_00_dot_22_bar__plus_00_dot_58_bar__plus_01_dot_00 - receptacle\n        Shelf_bar__minus_00_dot_23_bar__plus_01_dot_09_bar__plus_01_dot_00 - receptacle\n        Shelf_bar__minus_00_dot_26_bar__plus_00_dot_07_bar__plus_01_dot_00 - receptacle\n        Shelf_bar__minus_00_dot_27_bar__plus_01_dot_58_bar__plus_00_dot_99 - receptacle\n        Shelf_bar__minus_01_dot_29_bar__plus_00_dot_07_bar__plus_00_dot_26 - receptacle\n        Shelf_bar__minus_01_dot_29_bar__plus_00_dot_58_bar__plus_00_dot_22 - receptacle\n        Shelf_bar__minus_01_dot_29_bar__plus_01_dot_09_bar__plus_00_dot_23 - receptacle\n        Shelf_bar__minus_01_dot_29_bar__plus_01_dot_58_bar__plus_00_dot_27 - receptacle\n        Shelf_bar__minus_05_dot_24_bar__plus_01_dot_39_bar__plus_00_dot_09 - receptacle\n        Shelf_bar__minus_05_dot_24_bar__plus_01_dot_58_bar__plus_00_dot_07 - receptacle\n        Shelf_bar__minus_05_dot_24_bar__plus_01_dot_78_bar__plus_00_dot_07 - receptacle\n        Shelf_bar__minus_05_dot_24_bar__plus_01_dot_97_bar__plus_00_dot_09 - receptacle\n        SideTable_bar__minus_05_dot_02_bar__minus_00_dot_01_bar__plus_00_dot_27 - receptacle\n        Sofa_bar__minus_00_dot_74_bar__plus_00_dot_00_bar__plus_02_dot_75 - receptacle\n        loc_bar__minus_22_bar_14_bar_3_bar_30 - location\n        loc_bar__minus_21_bar_4_bar_2_bar_60 - location\n        loc_bar__minus_17_bar_15_bar_0_bar_45 - location\n        loc_bar__minus_16_bar_3_bar_2_bar_0 - location\n        loc_bar__minus_16_bar_3_bar_3_bar_0 - location\n        loc_bar__minus_6_bar_15_bar_1_bar_60 - location\n        loc_bar__minus_16_bar_3_bar_3_bar__minus_15 - location\n        loc_bar__minus_6_bar_6_bar_1_bar_45 - location\n        loc_bar__minus_17_bar_15_bar_0_bar_60 - location\n        loc_bar__minus_7_bar_14_bar_0_bar_60 - location\n        loc_bar__minus_16_bar_4_bar_3_bar_30 - location\n        loc_bar__minus_12_bar_15_bar_0_bar_45 - location\n        loc_bar__minus_4_bar_4_bar_1_bar_60 - location\n        loc_bar__minus_14_bar_15_bar_0_bar_45 - location\n        loc_bar__minus_21_bar_16_bar_0_bar_60 - location\n        loc_bar__minus_4_bar_4_bar_1_bar_30 - location\n        loc_bar__minus_8_bar_12_bar_1_bar_60 - location\n        loc_bar__minus_4_bar_4_bar_1_bar_0 - location\n        loc_bar__minus_19_bar_15_bar_0_bar_45 - location\n        loc_bar__minus_18_bar_14_bar_0_bar_60 - location\n        loc_bar__minus_7_bar_15_bar_0_bar_60 - location\n        loc_bar__minus_8_bar_4_bar_2_bar_0 - location\n        loc_bar__minus_7_bar_6_bar_2_bar_30 - location\n        loc_bar__minus_7_bar_6_bar_2_bar_60 - location\n        loc_bar__minus_4_bar_4_bar_2_bar_60 - location\n        loc_bar__minus_21_bar_16_bar_3_bar_60 - location\n        loc_bar__minus_21_bar_16_bar_3_bar__minus_15 - location\n        loc_bar__minus_19_bar_4_bar_2_bar_15 - location\n        loc_bar__minus_7_bar_5_bar_2_bar_60 - location\n        loc_bar__minus_13_bar_14_bar_0_bar_60 - location\n        loc_bar__minus_6_bar_8_bar_1_bar_60 - location\n        loc_bar__minus_13_bar_3_bar_2_bar_60 - location\n        loc_bar__minus_18_bar_14_bar_3_bar_30 - location\n        )\n    \n\n(:init\n\n\n        (receptacleType Shelf_bar__minus_00_dot_27_bar__plus_01_dot_58_bar__plus_00_dot_99 ShelfType)\n        (receptacleType Cabinet_bar__minus_03_dot_87_bar__plus_00_dot_56_bar__plus_04_dot_20 CabinetType)\n        (receptacleType Shelf_bar__minus_05_dot_24_bar__plus_01_dot_78_bar__plus_00_dot_07 ShelfType)\n        (receptacleType Cabinet_bar__minus_03_dot_85_bar__plus_00_dot_56_bar__plus_04_dot_20 CabinetType)\n        (receptacleType Shelf_bar__minus_00_dot_22_bar__plus_00_dot_58_bar__plus_01_dot_00 ShelfType)\n        (receptacleType Shelf_bar__minus_01_dot_29_bar__plus_01_dot_58_bar__plus_00_dot_27 ShelfType)\n        (receptacleType Shelf_bar__minus_05_dot_24_bar__plus_01_dot_97_bar__plus_00_dot_09 ShelfType)\n        (receptacleType Safe_bar__minus_02_dot_30_bar__minus_00_dot_01_bar__plus_00_dot_27 SafeType)\n        (receptacleType Cabinet_bar__minus_02_dot_70_bar__plus_00_dot_56_bar__plus_04_dot_20 CabinetType)\n        (receptacleType Shelf_bar__minus_01_dot_29_bar__plus_00_dot_58_bar__plus_00_dot_22 ShelfType)\n        (receptacleType Drawer_bar__minus_05_dot_02_bar__plus_00_dot_88_bar__plus_00_dot_37 DrawerType)\n        (receptacleType Drawer_bar__minus_02_dot_99_bar__plus_01_dot_01_bar__plus_04_dot_30 DrawerType)\n        (receptacleType Shelf_bar__minus_00_dot_23_bar__plus_01_dot_09_bar__plus_01_dot_00 ShelfType)\n        (receptacleType Shelf_bar__minus_05_dot_24_bar__plus_01_dot_58_bar__plus_00_dot_07 ShelfType)\n        (receptacleType SideTable_bar__minus_05_dot_02_bar__minus_00_dot_01_bar__plus_00_dot_27 SideTableType)\n        (receptacleType Shelf_bar__minus_05_dot_24_bar__plus_01_dot_39_bar__plus_00_dot_09 ShelfType)\n        (receptacleType Drawer_bar__minus_04_dot_74_bar__plus_01_dot_01_bar__plus_04_dot_30 DrawerType)\n        (receptacleType Sofa_bar__minus_00_dot_74_bar__plus_00_dot_00_bar__plus_02_dot_75 SofaType)\n        (receptacleType Shelf_bar__minus_00_dot_26_bar__plus_00_dot_07_bar__plus_01_dot_00 ShelfType)\n        (receptacleType Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59 DresserType)\n        (receptacleType Drawer_bar__minus_03_dot_57_bar__plus_01_dot_01_bar__plus_04_dot_30 DrawerType)\n        (receptacleType GarbageCan_bar__minus_05_dot_80_bar__plus_00_dot_00_bar__plus_04_dot_07 GarbageCanType)\n        (receptacleType Drawer_bar__minus_04_dot_16_bar__plus_01_dot_01_bar__plus_04_dot_30 DrawerType)\n        (receptacleType Shelf_bar__minus_01_dot_29_bar__plus_00_dot_07_bar__plus_00_dot_26 ShelfType)\n        (receptacleType Shelf_bar__minus_01_dot_29_bar__plus_01_dot_09_bar__plus_00_dot_23 ShelfType)\n        (receptacleType ArmChair_bar__minus_01_dot_84_bar__minus_00_dot_01_bar__plus_04_dot_51 ArmChairType)\n        (receptacleType Cabinet_bar__minus_05_dot_02_bar__plus_00_dot_56_bar__plus_04_dot_20 CabinetType)\n        (objectType CellPhone_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_39 CellPhoneType)\n        (objectType LightSwitch_bar__minus_06_dot_00_bar__plus_01_dot_35_bar__plus_03_dot_40 LightSwitchType)\n        (objectType Painting_bar__minus_06_dot_02_bar__plus_01_dot_80_bar__plus_04_dot_18 PaintingType)\n        (objectType Statue_bar__minus_01_dot_46_bar__plus_00_dot_60_bar__plus_00_dot_22 StatueType)\n        (objectType RemoteControl_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_89 RemoteControlType)\n        (objectType KeyChain_bar__minus_03_dot_86_bar__plus_01_dot_11_bar__plus_04_dot_79 KeyChainType)\n        (objectType Box_bar__minus_02_dot_91_bar__plus_00_dot_42_bar__plus_04_dot_59 BoxType)\n        (objectType Pillow_bar__minus_02_dot_03_bar__plus_00_dot_67_bar__plus_04_dot_42 PillowType)\n        (objectType Television_bar__minus_03_dot_35_bar__plus_00_dot_70_bar__plus_00_dot_13 TelevisionType)\n        (objectType TissueBox_bar__minus_04_dot_02_bar__plus_00_dot_20_bar__plus_04_dot_59 TissueBoxType)\n        (objectType KeyChain_bar__minus_00_dot_79_bar__plus_00_dot_61_bar__plus_01_dot_96 KeyChainType)\n        (objectType HousePlant_bar__minus_03_dot_97_bar__plus_01_dot_64_bar__plus_00_dot_14 HousePlantType)\n        (objectType KeyChain_bar__minus_01_dot_84_bar__plus_00_dot_59_bar__plus_04_dot_12 KeyChainType)\n        (objectType Watch_bar__minus_02_dot_14_bar__plus_00_dot_03_bar__plus_00_dot_32 WatchType)\n        (objectType FloorLamp_bar__minus_05_dot_60_bar__plus_00_dot_00_bar__plus_04_dot_64 FloorLampType)\n        (objectType RemoteControl_bar__minus_03_dot_54_bar__plus_01_dot_11_bar__plus_04_dot_89 RemoteControlType)\n        (objectType CreditCard_bar__minus_02_dot_09_bar__plus_00_dot_59_bar__plus_04_dot_30 CreditCardType)\n        (objectType FloorLamp_bar__minus_00_dot_65_bar__plus_00_dot_27_bar__plus_04_dot_43 FloorLampType)\n        (objectType Laptop_bar__minus_03_dot_39_bar__plus_01_dot_10_bar__plus_04_dot_49 LaptopType)\n        (objectType RemoteControl_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_69 RemoteControlType)\n        (objectType Laptop_bar__minus_04_dot_18_bar__plus_01_dot_11_bar__plus_04_dot_49 LaptopType)\n        (objectType Vase_bar__minus_02_dot_90_bar__plus_01_dot_11_bar__plus_04_dot_79 VaseType)\n        (objectType Statue_bar__minus_00_dot_26_bar__plus_00_dot_08_bar__plus_01_dot_19 StatueType)\n        (objectType Watch_bar__minus_02_dot_35_bar__plus_00_dot_03_bar__plus_00_dot_21 WatchType)\n        (objectType Watch_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_79 WatchType)\n        (objectType Newspaper_bar__minus_00_dot_79_bar__plus_00_dot_62_bar__plus_03_dot_55 NewspaperType)\n        (objectType Vase_bar__minus_03_dot_86_bar__plus_01_dot_12_bar__plus_04_dot_39 VaseType)\n        (objectType CreditCard_bar__minus_04_dot_16_bar__plus_01_dot_00_bar__plus_04_dot_34 CreditCardType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain CabinetType BoxType)\n        (canContain CabinetType TissueBoxType)\n        (canContain CabinetType NewspaperType)\n        (canContain CabinetType VaseType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain CabinetType BoxType)\n        (canContain CabinetType TissueBoxType)\n        (canContain CabinetType NewspaperType)\n        (canContain CabinetType VaseType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain SafeType CellPhoneType)\n        (canContain SafeType KeyChainType)\n        (canContain SafeType CreditCardType)\n        (canContain SafeType StatueType)\n        (canContain SafeType WatchType)\n        (canContain SafeType VaseType)\n        (canContain CabinetType BoxType)\n        (canContain CabinetType TissueBoxType)\n        (canContain CabinetType NewspaperType)\n        (canContain CabinetType VaseType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain DrawerType RemoteControlType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType TissueBoxType)\n        (canContain DrawerType NewspaperType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType WatchType)\n        (canContain DrawerType RemoteControlType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType TissueBoxType)\n        (canContain DrawerType NewspaperType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType WatchType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain SideTableType RemoteControlType)\n        (canContain SideTableType LaptopType)\n        (canContain SideTableType CellPhoneType)\n        (canContain SideTableType BoxType)\n        (canContain SideTableType CreditCardType)\n        (canContain SideTableType StatueType)\n        (canContain SideTableType TissueBoxType)\n        (canContain SideTableType NewspaperType)\n        (canContain SideTableType VaseType)\n        (canContain SideTableType KeyChainType)\n        (canContain SideTableType WatchType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain DrawerType RemoteControlType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType TissueBoxType)\n        (canContain DrawerType NewspaperType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType WatchType)\n        (canContain SofaType CellPhoneType)\n        (canContain SofaType KeyChainType)\n        (canContain SofaType BoxType)\n        (canContain SofaType CreditCardType)\n        (canContain SofaType PillowType)\n        (canContain SofaType RemoteControlType)\n        (canContain SofaType LaptopType)\n        (canContain SofaType NewspaperType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain DresserType RemoteControlType)\n        (canContain DresserType LaptopType)\n        (canContain DresserType CellPhoneType)\n        (canContain DresserType BoxType)\n        (canContain DresserType CreditCardType)\n        (canContain DresserType StatueType)\n        (canContain DresserType TissueBoxType)\n        (canContain DresserType NewspaperType)\n        (canContain DresserType VaseType)\n        (canContain DresserType KeyChainType)\n        (canContain DresserType WatchType)\n        (canContain DrawerType RemoteControlType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType TissueBoxType)\n        (canContain DrawerType NewspaperType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType WatchType)\n        (canContain GarbageCanType TissueBoxType)\n        (canContain GarbageCanType NewspaperType)\n        (canContain DrawerType RemoteControlType)\n        (canContain DrawerType CellPhoneType)\n        (canContain DrawerType CreditCardType)\n        (canContain DrawerType TissueBoxType)\n        (canContain DrawerType NewspaperType)\n        (canContain DrawerType KeyChainType)\n        (canContain DrawerType WatchType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain ShelfType RemoteControlType)\n        (canContain ShelfType CellPhoneType)\n        (canContain ShelfType BoxType)\n        (canContain ShelfType CreditCardType)\n        (canContain ShelfType StatueType)\n        (canContain ShelfType TissueBoxType)\n        (canContain ShelfType NewspaperType)\n        (canContain ShelfType VaseType)\n        (canContain ShelfType KeyChainType)\n        (canContain ShelfType WatchType)\n        (canContain ArmChairType CellPhoneType)\n        (canContain ArmChairType KeyChainType)\n        (canContain ArmChairType BoxType)\n        (canContain ArmChairType CreditCardType)\n        (canContain ArmChairType PillowType)\n        (canContain ArmChairType RemoteControlType)\n        (canContain ArmChairType LaptopType)\n        (canContain ArmChairType NewspaperType)\n        (canContain CabinetType BoxType)\n        (canContain CabinetType TissueBoxType)\n        (canContain CabinetType NewspaperType)\n        (canContain CabinetType VaseType)\n        (pickupable CellPhone_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_39)\n        (pickupable Statue_bar__minus_01_dot_46_bar__plus_00_dot_60_bar__plus_00_dot_22)\n        (pickupable RemoteControl_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_89)\n        (pickupable KeyChain_bar__minus_03_dot_86_bar__plus_01_dot_11_bar__plus_04_dot_79)\n        (pickupable Box_bar__minus_02_dot_91_bar__plus_00_dot_42_bar__plus_04_dot_59)\n        (pickupable Pillow_bar__minus_02_dot_03_bar__plus_00_dot_67_bar__plus_04_dot_42)\n        (pickupable TissueBox_bar__minus_04_dot_02_bar__plus_00_dot_20_bar__plus_04_dot_59)\n        (pickupable KeyChain_bar__minus_00_dot_79_bar__plus_00_dot_61_bar__plus_01_dot_96)\n        (pickupable KeyChain_bar__minus_01_dot_84_bar__plus_00_dot_59_bar__plus_04_dot_12)\n        (pickupable Watch_bar__minus_02_dot_14_bar__plus_00_dot_03_bar__plus_00_dot_32)\n        (pickupable RemoteControl_bar__minus_03_dot_54_bar__plus_01_dot_11_bar__plus_04_dot_89)\n        (pickupable CreditCard_bar__minus_02_dot_09_bar__plus_00_dot_59_bar__plus_04_dot_30)\n        (pickupable Laptop_bar__minus_03_dot_39_bar__plus_01_dot_10_bar__plus_04_dot_49)\n        (pickupable RemoteControl_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_69)\n        (pickupable Laptop_bar__minus_04_dot_18_bar__plus_01_dot_11_bar__plus_04_dot_49)\n        (pickupable Vase_bar__minus_02_dot_90_bar__plus_01_dot_11_bar__plus_04_dot_79)\n        (pickupable Statue_bar__minus_00_dot_26_bar__plus_00_dot_08_bar__plus_01_dot_19)\n        (pickupable Watch_bar__minus_02_dot_35_bar__plus_00_dot_03_bar__plus_00_dot_21)\n        (pickupable Watch_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_79)\n        (pickupable Newspaper_bar__minus_00_dot_79_bar__plus_00_dot_62_bar__plus_03_dot_55)\n        (pickupable Vase_bar__minus_03_dot_86_bar__plus_01_dot_12_bar__plus_04_dot_39)\n        (pickupable CreditCard_bar__minus_04_dot_16_bar__plus_01_dot_00_bar__plus_04_dot_34)\n        (isReceptacleObject Box_bar__minus_02_dot_91_bar__plus_00_dot_42_bar__plus_04_dot_59)\n        (openable Cabinet_bar__minus_03_dot_87_bar__plus_00_dot_56_bar__plus_04_dot_20)\n        (openable Cabinet_bar__minus_03_dot_85_bar__plus_00_dot_56_bar__plus_04_dot_20)\n        (openable Safe_bar__minus_02_dot_30_bar__minus_00_dot_01_bar__plus_00_dot_27)\n        (openable Cabinet_bar__minus_02_dot_70_bar__plus_00_dot_56_bar__plus_04_dot_20)\n        (openable Drawer_bar__minus_05_dot_02_bar__plus_00_dot_88_bar__plus_00_dot_37)\n        (openable Drawer_bar__minus_02_dot_99_bar__plus_01_dot_01_bar__plus_04_dot_30)\n        (openable Drawer_bar__minus_04_dot_74_bar__plus_01_dot_01_bar__plus_04_dot_30)\n        (openable Drawer_bar__minus_03_dot_57_bar__plus_01_dot_01_bar__plus_04_dot_30)\n        (openable Drawer_bar__minus_04_dot_16_bar__plus_01_dot_01_bar__plus_04_dot_30)\n        (openable Cabinet_bar__minus_05_dot_02_bar__plus_00_dot_56_bar__plus_04_dot_20)\n        \n        (atLocation agent1 loc_bar__minus_18_bar_14_bar_3_bar_30)\n        \n        \n        \n        \n        \n        \n        \n        (toggleable FloorLamp_bar__minus_05_dot_60_bar__plus_00_dot_00_bar__plus_04_dot_64)\n        (toggleable FloorLamp_bar__minus_00_dot_65_bar__plus_00_dot_27_bar__plus_04_dot_43)\n        \n        \n        \n        \n        (inReceptacle Newspaper_bar__minus_00_dot_79_bar__plus_00_dot_62_bar__plus_03_dot_55 Sofa_bar__minus_00_dot_74_bar__plus_00_dot_00_bar__plus_02_dot_75)\n        (inReceptacle RemoteControl_bar__minus_03_dot_54_bar__plus_01_dot_11_bar__plus_04_dot_89 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle CellPhone_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_39 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle RemoteControl_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_89 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle KeyChain_bar__minus_03_dot_86_bar__plus_01_dot_11_bar__plus_04_dot_79 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle Watch_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_79 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle Laptop_bar__minus_03_dot_39_bar__plus_01_dot_10_bar__plus_04_dot_49 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle RemoteControl_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_69 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle Laptop_bar__minus_04_dot_18_bar__plus_01_dot_11_bar__plus_04_dot_49 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle Vase_bar__minus_02_dot_90_bar__plus_01_dot_11_bar__plus_04_dot_79 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle Vase_bar__minus_03_dot_86_bar__plus_01_dot_12_bar__plus_04_dot_39 Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59)\n        (inReceptacle Box_bar__minus_02_dot_91_bar__plus_00_dot_42_bar__plus_04_dot_59 Cabinet_bar__minus_02_dot_70_bar__plus_00_dot_56_bar__plus_04_dot_20)\n        (inReceptacle TissueBox_bar__minus_04_dot_02_bar__plus_00_dot_20_bar__plus_04_dot_59 Cabinet_bar__minus_03_dot_87_bar__plus_00_dot_56_bar__plus_04_dot_20)\n        (inReceptacle Watch_bar__minus_02_dot_14_bar__plus_00_dot_03_bar__plus_00_dot_32 Safe_bar__minus_02_dot_30_bar__minus_00_dot_01_bar__plus_00_dot_27)\n        (inReceptacle Watch_bar__minus_02_dot_35_bar__plus_00_dot_03_bar__plus_00_dot_21 Safe_bar__minus_02_dot_30_bar__minus_00_dot_01_bar__plus_00_dot_27)\n        (inReceptacle Pillow_bar__minus_02_dot_03_bar__plus_00_dot_67_bar__plus_04_dot_42 ArmChair_bar__minus_01_dot_84_bar__minus_00_dot_01_bar__plus_04_dot_51)\n        (inReceptacle CreditCard_bar__minus_02_dot_09_bar__plus_00_dot_59_bar__plus_04_dot_30 ArmChair_bar__minus_01_dot_84_bar__minus_00_dot_01_bar__plus_04_dot_51)\n        (inReceptacle CreditCard_bar__minus_04_dot_16_bar__plus_01_dot_00_bar__plus_04_dot_34 Drawer_bar__minus_04_dot_16_bar__plus_01_dot_01_bar__plus_04_dot_30)\n        (inReceptacle Statue_bar__minus_00_dot_26_bar__plus_00_dot_08_bar__plus_01_dot_19 Shelf_bar__minus_00_dot_26_bar__plus_00_dot_07_bar__plus_01_dot_00)\n        (inReceptacle Statue_bar__minus_01_dot_46_bar__plus_00_dot_60_bar__plus_00_dot_22 Shelf_bar__minus_01_dot_29_bar__plus_00_dot_58_bar__plus_00_dot_22)\n        \n        \n        (receptacleAtLocation ArmChair_bar__minus_01_dot_84_bar__minus_00_dot_01_bar__plus_04_dot_51 loc_bar__minus_7_bar_14_bar_0_bar_60)\n        (receptacleAtLocation Cabinet_bar__minus_02_dot_70_bar__plus_00_dot_56_bar__plus_04_dot_20 loc_bar__minus_13_bar_14_bar_0_bar_60)\n        (receptacleAtLocation Cabinet_bar__minus_03_dot_85_bar__plus_00_dot_56_bar__plus_04_dot_20 loc_bar__minus_13_bar_14_bar_0_bar_60)\n        (receptacleAtLocation Cabinet_bar__minus_03_dot_87_bar__plus_00_dot_56_bar__plus_04_dot_20 loc_bar__minus_18_bar_14_bar_0_bar_60)\n        (receptacleAtLocation Cabinet_bar__minus_05_dot_02_bar__plus_00_dot_56_bar__plus_04_dot_20 loc_bar__minus_18_bar_14_bar_0_bar_60)\n        (receptacleAtLocation Drawer_bar__minus_02_dot_99_bar__plus_01_dot_01_bar__plus_04_dot_30 loc_bar__minus_12_bar_15_bar_0_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_03_dot_57_bar__plus_01_dot_01_bar__plus_04_dot_30 loc_bar__minus_14_bar_15_bar_0_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_04_dot_16_bar__plus_01_dot_01_bar__plus_04_dot_30 loc_bar__minus_17_bar_15_bar_0_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_04_dot_74_bar__plus_01_dot_01_bar__plus_04_dot_30 loc_bar__minus_19_bar_15_bar_0_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_05_dot_02_bar__plus_00_dot_88_bar__plus_00_dot_37 loc_bar__minus_16_bar_4_bar_3_bar_30)\n        (receptacleAtLocation Dresser_bar__minus_03_dot_86_bar_00_dot_00_bar__plus_04_dot_59 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (receptacleAtLocation GarbageCan_bar__minus_05_dot_80_bar__plus_00_dot_00_bar__plus_04_dot_07 loc_bar__minus_21_bar_16_bar_3_bar_60)\n        (receptacleAtLocation Safe_bar__minus_02_dot_30_bar__minus_00_dot_01_bar__plus_00_dot_27 loc_bar__minus_7_bar_6_bar_2_bar_60)\n        (receptacleAtLocation Shelf_bar__minus_00_dot_22_bar__plus_00_dot_58_bar__plus_01_dot_00 loc_bar__minus_4_bar_4_bar_1_bar_60)\n        (receptacleAtLocation Shelf_bar__minus_00_dot_23_bar__plus_01_dot_09_bar__plus_01_dot_00 loc_bar__minus_4_bar_4_bar_1_bar_30)\n        (receptacleAtLocation Shelf_bar__minus_00_dot_26_bar__plus_00_dot_07_bar__plus_01_dot_00 loc_bar__minus_6_bar_6_bar_1_bar_45)\n        (receptacleAtLocation Shelf_bar__minus_00_dot_27_bar__plus_01_dot_58_bar__plus_00_dot_99 loc_bar__minus_4_bar_4_bar_1_bar_0)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_29_bar__plus_00_dot_07_bar__plus_00_dot_26 loc_bar__minus_7_bar_5_bar_2_bar_60)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_29_bar__plus_00_dot_58_bar__plus_00_dot_22 loc_bar__minus_4_bar_4_bar_2_bar_60)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_29_bar__plus_01_dot_09_bar__plus_00_dot_23 loc_bar__minus_7_bar_6_bar_2_bar_30)\n        (receptacleAtLocation Shelf_bar__minus_01_dot_29_bar__plus_01_dot_58_bar__plus_00_dot_27 loc_bar__minus_8_bar_4_bar_2_bar_0)\n        (receptacleAtLocation Shelf_bar__minus_05_dot_24_bar__plus_01_dot_39_bar__plus_00_dot_09 loc_bar__minus_19_bar_4_bar_2_bar_15)\n        (receptacleAtLocation Shelf_bar__minus_05_dot_24_bar__plus_01_dot_58_bar__plus_00_dot_07 loc_bar__minus_16_bar_3_bar_3_bar_0)\n        (receptacleAtLocation Shelf_bar__minus_05_dot_24_bar__plus_01_dot_78_bar__plus_00_dot_07 loc_bar__minus_16_bar_3_bar_3_bar_0)\n        (receptacleAtLocation Shelf_bar__minus_05_dot_24_bar__plus_01_dot_97_bar__plus_00_dot_09 loc_bar__minus_16_bar_3_bar_3_bar__minus_15)\n        (receptacleAtLocation SideTable_bar__minus_05_dot_02_bar__minus_00_dot_01_bar__plus_00_dot_27 loc_bar__minus_21_bar_4_bar_2_bar_60)\n        (receptacleAtLocation Sofa_bar__minus_00_dot_74_bar__plus_00_dot_00_bar__plus_02_dot_75 loc_bar__minus_8_bar_12_bar_1_bar_60)\n        (objectAtLocation Vase_bar__minus_03_dot_86_bar__plus_01_dot_12_bar__plus_04_dot_39 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation RemoteControl_bar__minus_03_dot_54_bar__plus_01_dot_11_bar__plus_04_dot_89 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation Laptop_bar__minus_03_dot_39_bar__plus_01_dot_10_bar__plus_04_dot_49 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation Statue_bar__minus_00_dot_26_bar__plus_00_dot_08_bar__plus_01_dot_19 loc_bar__minus_6_bar_6_bar_1_bar_45)\n        (objectAtLocation KeyChain_bar__minus_00_dot_79_bar__plus_00_dot_61_bar__plus_01_dot_96 loc_bar__minus_6_bar_8_bar_1_bar_60)\n        (objectAtLocation CreditCard_bar__minus_02_dot_09_bar__plus_00_dot_59_bar__plus_04_dot_30 loc_bar__minus_7_bar_14_bar_0_bar_60)\n        (objectAtLocation Watch_bar__minus_02_dot_14_bar__plus_00_dot_03_bar__plus_00_dot_32 loc_bar__minus_7_bar_6_bar_2_bar_60)\n        (objectAtLocation RemoteControl_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_69 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation KeyChain_bar__minus_01_dot_84_bar__plus_00_dot_59_bar__plus_04_dot_12 loc_bar__minus_7_bar_15_bar_0_bar_60)\n        (objectAtLocation Watch_bar__minus_02_dot_35_bar__plus_00_dot_03_bar__plus_00_dot_21 loc_bar__minus_7_bar_6_bar_2_bar_60)\n        (objectAtLocation Box_bar__minus_02_dot_91_bar__plus_00_dot_42_bar__plus_04_dot_59 loc_bar__minus_13_bar_14_bar_0_bar_60)\n        (objectAtLocation Watch_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_79 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation Pillow_bar__minus_02_dot_03_bar__plus_00_dot_67_bar__plus_04_dot_42 loc_bar__minus_7_bar_14_bar_0_bar_60)\n        (objectAtLocation FloorLamp_bar__minus_00_dot_65_bar__plus_00_dot_27_bar__plus_04_dot_43 loc_bar__minus_6_bar_15_bar_1_bar_60)\n        (objectAtLocation FloorLamp_bar__minus_05_dot_60_bar__plus_00_dot_00_bar__plus_04_dot_64 loc_bar__minus_21_bar_16_bar_0_bar_60)\n        (objectAtLocation TissueBox_bar__minus_04_dot_02_bar__plus_00_dot_20_bar__plus_04_dot_59 loc_bar__minus_18_bar_14_bar_0_bar_60)\n        (objectAtLocation Newspaper_bar__minus_00_dot_79_bar__plus_00_dot_62_bar__plus_03_dot_55 loc_bar__minus_8_bar_12_bar_1_bar_60)\n        (objectAtLocation CreditCard_bar__minus_04_dot_16_bar__plus_01_dot_00_bar__plus_04_dot_34 loc_bar__minus_17_bar_15_bar_0_bar_45)\n        (objectAtLocation KeyChain_bar__minus_03_dot_86_bar__plus_01_dot_11_bar__plus_04_dot_79 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation CellPhone_bar__minus_04_dot_83_bar__plus_01_dot_11_bar__plus_04_dot_39 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation LightSwitch_bar__minus_06_dot_00_bar__plus_01_dot_35_bar__plus_03_dot_40 loc_bar__minus_22_bar_14_bar_3_bar_30)\n        (objectAtLocation Painting_bar__minus_06_dot_02_bar__plus_01_dot_80_bar__plus_04_dot_18 loc_bar__minus_21_bar_16_bar_3_bar__minus_15)\n        (objectAtLocation HousePlant_bar__minus_03_dot_97_bar__plus_01_dot_64_bar__plus_00_dot_14 loc_bar__minus_16_bar_3_bar_2_bar_0)\n        (objectAtLocation Statue_bar__minus_01_dot_46_bar__plus_00_dot_60_bar__plus_00_dot_22 loc_bar__minus_4_bar_4_bar_2_bar_60)\n        (objectAtLocation Laptop_bar__minus_04_dot_18_bar__plus_01_dot_11_bar__plus_04_dot_49 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation RemoteControl_bar__minus_03_dot_22_bar__plus_01_dot_11_bar__plus_04_dot_89 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation Vase_bar__minus_02_dot_90_bar__plus_01_dot_11_bar__plus_04_dot_79 loc_bar__minus_17_bar_15_bar_0_bar_60)\n        (objectAtLocation Television_bar__minus_03_dot_35_bar__plus_00_dot_70_bar__plus_00_dot_13 loc_bar__minus_13_bar_3_bar_2_bar_60)\n        )\n    \n\n                (:goal\n                    (and\n                        (exists (?r - receptacle)\n                            (exists (?o1 - object)\n                                (and\n                                    (objectType ?o1 KeyChainType)\n                                    (receptacleType ?r SafeType)\n                                    (inReceptacle ?o1 ?r)\n                                    (exists (?o2 - object)\n                                        (and\n                                            (not (= ?o1 ?o2))\n                                            (objectType ?o2 KeyChainType)\n                                            (receptacleType ?r SafeType)\n                                            (inReceptacle ?o2 ?r)\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n            ", "solvable": false}