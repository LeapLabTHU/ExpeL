{"pddl_domain": ";; Specification in PDDL of the Alfred domain\n;; Intended to be used with Fast Downward which supports PDDL 2.2 level 1 plus the :action-costs requirement from PDDL 3.1.\n\n(define (domain alfred)\n (:requirements\n    :adl\n    :action-costs\n    :typing\n )\n (:types\n  agent\n  location\n  receptacle\n  object\n  rtype\n  otype\n  )\n\n\n (:predicates\n    (atLocation ?a - agent ?l - location)                     ; true if the agent is at the location\n    (receptacleAtLocation ?r - receptacle ?l - location)      ; true if the receptacle is at the location (constant)\n    (objectAtLocation ?o - object ?l - location)              ; true if the object is at the location\n    (openable ?r - receptacle)                                ; true if a receptacle is openable\n    (opened ?r - receptacle)                                  ; true if a receptacle is opened\n    (inReceptacle ?o - object ?r - receptacle)                ; object ?o is in receptacle ?r\n    (isReceptacleObject ?o - object)                          ; true if the object can have things put inside it\n    (inReceptacleObject ?innerObject - object ?outerObject - object)                ; object ?innerObject is inside object ?outerObject\n    (isReceptacleObjectFull ?o - object)                      ; true if the receptacle object contains something\n    (wasInReceptacle ?o - object ?r - receptacle)             ; object ?o was or is in receptacle ?r now or some time in the past\n    (checked ?r - receptacle)                                 ; whether the receptacle has been looked inside/visited\n    (examined ?l - location)                                  ; TODO\n    (receptacleType ?r - receptacle ?t - rtype)               ; the type of receptacle (Cabinet vs Cabinet|01|2...)\n    (canContain ?rt - rtype ?ot - otype)                      ; true if receptacle can hold object\n    (objectType ?o - object ?t - otype)                       ; the type of object (Apple vs Apple|01|2...)\n    (holds ?a - agent ?o - object)                            ; object ?o is held by agent ?a\n    (holdsAny ?a - agent)                                     ; agent ?a holds an object\n    (holdsAnyReceptacleObject ?a - agent)                        ; agent ?a holds a receptacle object\n    (full ?r - receptacle)                                    ; true if the receptacle has no remaining space\n    (isClean ?o - object)                                     ; true if the object has been clean in sink\n    (cleanable ?o - object)                                   ; true if the object can be placed in a sink\n    (isHot ?o - object)                                       ; true if the object has been heated up\n    (heatable ?o - object)                                    ; true if the object can be heated up in a microwave\n    (isCool ?o - object)                                      ; true if the object has been cooled\n    (coolable ?o - object)                                    ; true if the object can be cooled in the fridge\n    (pickupable ?o - object)                                   ; true if the object can be picked up\n    (moveable ?o - object)                                      ; true if the object can be moved\n    (toggleable ?o - object)                                  ; true if the object can be turned on/off\n    (isOn ?o - object)                                        ; true if the object is on\n    (isToggled ?o - object)                                   ; true if the object has been toggled\n    (sliceable ?o - object)                                   ; true if the object can be sliced\n    (isSliced ?o - object)                                    ; true if the object is sliced\n )\n\n  (:functions\n    (distance ?from ?to)\n    (total-cost) - number\n   )\n\n;; All actions are specified such that the final arguments are the ones used\n;; for performing actions in Unity.\n\n\n(:action look\n    :parameters (?a - agent ?l - location)\n    :precondition\n        (and\n            (atLocation ?a ?l)\n        )\n    :effect\n        (and\n            (checked ?l)\n        )\n)\n\n(:action inventory\n    :parameters (?a - agent)\n    :precondition\n        ()\n    :effect\n        (and\n            (checked ?a)\n        )\n)\n\n(:action examineReceptacle\n    :parameters (?a - agent ?r - receptacle)\n    :precondition\n        (and\n            (exists (?l - location)\n                (and\n                    (atLocation ?a ?l)\n                    (receptacleAtLocation ?r ?l)\n                )\n            )\n        )\n    :effect\n        (and\n            (checked ?r)\n        )\n)\n\n(:action examineObject\n    :parameters (?a - agent ?o - object)\n    :precondition\n        (or\n            ;(exists (?l - location)\n            ;    (and\n            ;        (atLocation ?a ?l)\n            ;        (objectAtLocation ?o ?l)\n            ;    )\n            ;)\n            (exists (?l - location, ?r - receptacle)\n                (and\n                    (atLocation ?a ?l)\n                    (receptacleAtLocation ?r ?l)\n                    ; (objectAtLocation ?o ?l)\n                    (inReceptacle ?o ?r)\n                    (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n              )\n            )\n            (holds ?a ?o)\n        )\n    :effect\n        (and\n            (checked ?o)\n        )\n)\n\n;; agent goes to receptacle\n (:action GotoLocation\n    :parameters (?a - agent ?lStart - location ?lEnd - location ?r - receptacle)\n    :precondition (and\n                    (atLocation ?a ?lStart)\n                    (receptacleAtLocation ?r ?lEnd)\n                    ;(exists (?r - receptacle) (receptacleAtLocation ?r ?lEnd))\n                  )\n    :effect (and\n                (not (atLocation ?a ?lStart))\n                (atLocation ?a ?lEnd)\n                ; (forall (?r - receptacle)\n                ;     (when (and (receptacleAtLocation ?r ?lEnd)\n                ;                (or (not (openable ?r)) (opened ?r)))\n                ;         (checked ?r)\n                ;     )\n                ; )\n                ; (increase (total-cost) (distance ?lStart ?lEnd))\n                (increase (total-cost) 1)\n            )\n )\n\n;; agent opens receptacle\n (:action OpenObject\n    :parameters (?a - agent ?l - location ?r - receptacle)\n    :precondition (and\n            (openable ?r)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (not (opened ?r))\n            )\n    :effect (and\n                (opened ?r)\n                (checked ?r)\n                (increase (total-cost) 1)\n            )\n )\n;; agent closes receptacle\n (:action CloseObject\n    :parameters (?a - agent ?l - location ?r - receptacle)\n    :precondition (and\n            (openable ?r)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (opened ?r)\n            )\n    :effect (and\n                (not (opened ?r))\n                (increase (total-cost) 1)\n            )\n\n )\n\n ;; agent picks up object from a receptacle\n (:action PickupObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition\n        (and\n            (pickupable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            ; (objectAtLocation ?o ?l)\n            (inReceptacle ?o ?r)\n            (not (holdsAny ?a))  ; agent's hands are empty.\n            ;(not (holdsAnyReceptacleObject ?a))\n            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n            ;(not (isReceptacleObject ?o))\n        )\n    :effect\n        (and\n            (not (inReceptacle ?o ?r))\n            (holds ?a ?o)\n            (holdsAny ?a)\n            (not (objectAtLocation ?o ?l))\n            ;(not (full ?r))\n            (increase (total-cost) 1)\n        )\n )\n\n\n; ;; agent picks up object from a receptacle\n; (:action PickupObjectFromReceptacleObject\n;    :parameters (?a - agent ?l - location ?o - object ?outerR - object ?r - receptacle)\n;    :precondition\n;        (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (inReceptacle ?o ?r)\n;            (pickupable ?o)\n;            (not (holdsAny ?a))  ; agent's hands are empty.\n;            (not (holdsAnyReceptacleObject ?a))\n;            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n;            (not (isReceptacleObject ?o))\n;            (isReceptacleObject ?outerR)\n;            (inReceptacleObject ?o ?outerR)\n;        )\n;    :effect\n;        (and\n;            (not (inReceptacle ?o ?r))\n;            (holds ?a ?o)\n;            (holdsAny ?a)\n;            (not (objectAtLocation ?o ?l))\n;            (not (full ?r))\n;            (increase (total-cost) 1)\n;\n;            (not (inReceptacleObject ?o ?outerR))\n;            (not (isReceptacleObjectFull ?outerR))\n;        )\n; )\n;\n; ;; agent picks up object from a receptacle\n; (:action PickupEmptyReceptacleObject\n;    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n;    :precondition\n;        (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            ; (objectAtLocation ?o ?l)\n;            (inReceptacle ?o ?r)\n;            (pickupable ?o)\n;            (not (holdsAny ?a))  ; agent's hands are empty.\n;            (not (holdsAnyReceptacleObject ?a))\n;            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n;            (isReceptacleObject ?o)\n;            (not (isReceptacleObjectFull ?o))\n;        )\n;    :effect\n;        (and\n;            (not (inReceptacle ?o ?r))\n;            (holds ?a ?o)\n;            (holdsAny ?a)\n;            (not (objectAtLocation ?o ?l))\n;            (not (full ?r))\n;            (increase (total-cost) 1)\n;            (holdsAnyReceptacleObject ?a)\n;        )\n; )\n;\n; ;; agent picks up object from a receptacle\n; (:action PickupFullReceptacleObject\n;    :parameters (?a - agent ?l - location ?o - object ?outerR - object ?r - receptacle)\n;    :precondition\n;        (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (inReceptacle ?outerR ?r)\n;            (pickupable ?outerR)\n;            (not (holdsAny ?a))  ; agent's hands are empty.\n;            (not (holdsAnyReceptacleObject ?a))\n;            (or (not (openable ?r)) (opened ?r))  ; receptacle is opened if it is openable.\n;            (not (isReceptacleObject ?o))\n;            (isReceptacleObject ?outerR)\n;            (inReceptacleObject ?o ?outerR)\n;        )\n;    :effect\n;        (and\n;            (not (inReceptacle ?o ?r))\n;            (not (inReceptacle ?outerR ?r))\n;            (holds ?a ?outerR)\n;            (holdsAny ?a)\n;            (not (objectAtLocation ?o ?l))\n;            (not (objectAtLocation ?outerR ?l))\n;            (not (full ?r))\n;            (increase (total-cost) 1)\n;            (holdsAnyReceptacleObject ?a)\n;        )\n; )\n\n\n;; agent puts down an object\n (:action PutObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle ?ot - otype ?rt - rtype)\n    :precondition (and\n            (holds ?a ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (or (not (openable ?r)) (opened ?r))    ; receptacle is opened if it is openable\n            ;(not (full ?r))\n            (objectType ?o ?ot)\n            (receptacleType ?r ?rt)\n            (canContain ?rt ?ot)\n            ;(not (holdsAnyReceptacleObject ?a))\n            )\n    :effect (and\n                (inReceptacle ?o ?r)\n                (objectAtLocation ?o ?l)\n                ;(full ?r)\n                (not (holds ?a ?o))\n                (not (holdsAny ?a))\n                (increase (total-cost) 1)\n            )\n )\n\n;;; agent puts down an object\n; (:action PutObjectInReceptacleObject\n;    :parameters (?a - agent ?l - location ?ot - otype ?o - object ?outerO - object ?outerR - receptacle)\n;    :precondition (and\n;            (atLocation ?a ?l)\n;            (objectAtLocation ?outerO ?l)\n;            (isReceptacleObject ?outerO)\n;            (not (isReceptacleObject ?o))\n;            (objectType ?o ?ot)\n;            (holds ?a ?o)\n;            (not (holdsAnyReceptacleObject ?a))\n;            (inReceptacle ?outerO ?outerR)\n;            (not (isReceptacleObjectFull ?outerO))\n;            )\n;    :effect (and\n;                (inReceptacleObject ?o ?outerO)\n;                (inReceptacle ?o ?outerR)\n;                (not (holds ?a ?o))\n;                (not (holdsAny ?a))\n;                (objectAtLocation ?o ?l)\n;                (isReceptacleObjectFull ?outerO)\n;                (increase (total-cost) 1)\n;            )\n; )\n;\n;;; agent puts down an object\n; (:action PutEmptyReceptacleObjectinReceptacle\n;    :parameters (?a - agent ?l - location ?ot - otype ?o - object ?r - receptacle)\n;    :precondition (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (or (not (openable ?r)) (opened ?r))    ; receptacle is opened if it is openable\n;            (not (full ?r))\n;            (objectType ?o ?ot)\n;            (holds ?a ?o)\n;            (holdsAnyReceptacleObject ?a)\n;            (isReceptacleObject ?o)\n;            (not (isReceptacleObjectFull ?o))\n;            )\n;    :effect (and\n;                (inReceptacle ?o ?r)\n;                (objectAtLocation ?o ?l)\n;                (full ?r)\n;                (not (holds ?a ?o))\n;                (not (holdsAny ?a))\n;                (not (holdsAnyReceptacleObject ?a))\n;                (increase (total-cost) 1)\n;            )\n; )\n;\n;;; agent puts down a receptacle object in a receptacle\n; (:action PutFullReceptacleObjectInReceptacle\n;    :parameters (?a - agent ?l - location ?ot - otype ?innerO - object ?outerO - object ?r - receptacle) ; ?rt - rtype)\n;    :precondition (and\n;            (atLocation ?a ?l)\n;            (receptacleAtLocation ?r ?l)\n;            (objectType ?outerO ?ot)\n;            (holds ?a ?outerO)\n;            (holdsAnyReceptacleObject ?a)\n;            (isReceptacleObject ?outerO)\n;            (isReceptacleObjectFull ?outerO)\n;            (inReceptacleObject ?innerO ?outerO)\n;            )\n;    :effect (and\n;                (not (holdsAny ?a))\n;                (not (holdsAnyReceptacleObject ?a))\n;                (objectAtLocation ?outerO ?l)\n;                (objectAtLocation ?innerO ?l)\n;                (inReceptacle ?outerO ?r)\n;                (inReceptacle ?innerO ?r)\n;                (not (holds ?a ?outerO))\n;                (increase (total-cost) 1)\n;            )\n; )\n\n;; agent cleans some object\n (:action CleanObject\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n    :precondition (and\n            (cleanable ?o)\n            (or\n                (receptacleType ?r SinkType)\n                (receptacleType ?r SinkBasinType)\n            )\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isClean ?o)\n            )\n )\n\n\n;; agent heats-up some object\n (:action HeatObject\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n    :precondition (and\n            (heatable ?o)\n            (or\n                (receptacleType ?r MicrowaveType)\n            )\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isHot ?o)\n                (not (isCool ?o))\n            )\n )\n\n;; agent cools some object\n (:action CoolObject\n    :parameters (?a - agent ?l - location ?r - receptacle ?o - object)\n    :precondition (and\n            (coolable ?o)\n            (or\n                (receptacleType ?r FridgeType)\n            )\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (holds ?a ?o)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isCool ?o)\n                (not (isHot ?o))\n            )\n )\n\n\n;; agent toggle object\n (:action ToggleObject\n    :parameters (?a - agent ?l - location ?o - object ?r - receptacle)\n    :precondition (and\n            (toggleable ?o)\n            (atLocation ?a ?l)\n            (receptacleAtLocation ?r ?l)\n            (inReceptacle ?o ?r)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (when (isOn ?o)\n                    (not (isOn ?o)))\n                (when (not (isOn ?o))\n                    (isOn ?o))\n                (isToggled ?o)\n            )\n )\n\n\n;; agent slices some object with a knife\n (:action SliceObject\n    :parameters (?a - agent ?l - location ?co - object ?ko - object)\n    :precondition\n            (and\n                (sliceable ?co)\n                (or\n                    (objectType ?ko KnifeType)\n                    (objectType ?ko ButterKnifeType)\n                )\n                (atLocation ?a ?l)\n                (objectAtLocation ?co ?l)\n                (holds ?a ?ko)\n            )\n    :effect (and\n                (increase (total-cost) 5)\n                (isSliced ?co)\n            )\n )\n\n\n)\n", "grammar": "grammar :: \"\"\"\n    {\n        \"intro\": [\n            {\n                \"rhs\": \"-= Welcome to TextWorld, ALFRED! =-\\n\\n#look.feedback#\\n\\n#task#\"\n            }\n        ],\n\n        \"notImplemented\": [\n            {\n                \"rhs\": \"TODO\"\n            }\n        ],\n\n        \"task\": [\n            {\n                \"rhs\": \"Your task is to: put a clean soapbar in drawer.\"\n            }\n        ],\n\n        \"GotoLocation.feedback\": [\n            {\n                \"rhs\": \"You arrive at {lend.name}. #examineReceptacle.feedback#\"\n            }\n        ],\n\n        \"OpenObject.feedback\": [\n            {\n                \"rhs\": \"You open the {r.name}. #examineReceptacle.feedback#\"\n            }\n        ],\n\n        \"CloseObject.feedback\": [\n            {\n                \"rhs\": \"You close the {r.name}.\"\n            }\n        ],\n\n        \"PickupObject.feedback\": [\n            {\n                \"rhs\": \"You pick up the {o.name} from the {r.name}.\"\n            }\n        ],\n\n        \"PickupObjectFromReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PickupObjectFromReceptacleObject: You pick up the {o.name}.\"\n            }\n        ],\n\n        \"PickupEmptyReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PickupEmptyReceptacleObject: You pick up the {o.name}.\"\n            }\n        ],\n\n        \"PickupFullReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PickupFullReceptacleObject: You pick up the {outerr.name}.\"\n            }\n        ],\n\n        \"PutObject.feedback\": [\n            {\n                \"rhs\": \"You put the {o.name} in/on the {r.name}.\"\n            }\n        ],\n\n        \"PutObjectInReceptacleObject.feedback\": [\n            {\n                \"rhs\": \"PutObjectInReceptacleObject: You put the {o.name} in the {outero.name}.\"\n            }\n        ],\n\n        \"PutEmptyReceptacleObjectinReceptacle.feedback\": [\n            {\n                \"rhs\": \"PutEmptyReceptacleObjectinReceptacle: You put the {o.name} in the {r.name}.\"\n            }\n        ],\n\n        \"PutFullReceptacleObjectInReceptacle.feedback\": [\n            {\n                \"rhs\": \"PutFullReceptacleObjectInReceptacle: You put the {outero.name} in the {r.name}.\"\n            }\n        ],\n\n        \"inventory.feedback\": [\n            {\n                \"condition\": \"holdsany(a:agent)\",\n                \"rhs\": \"You are carrying: [{o.indefinite + ' ' + o.name | holds(a:agent, o:object)}].\"\n            },\n            {\n                \"rhs\": \"You are not carrying anything.\"\n            }\n        ],\n\n        \"examineReceptacle.feedback\": [\n            {\n                \"condition\": \"openable(r:receptacle) & opened(r:receptacle)\",\n                \"rhs\": \"The {r.name} is open. In it, you see [{o.indefinite + ' ' + o.name | inreceptacle(o:object, r:receptacle)}].\"\n            },\n            {\n                \"condition\": \"openable(r:receptacle)\",\n                \"rhs\": \"The {r.name} is closed.\"\n            },\n            {\n                \"rhs\": \"On the {r.name}, you see [{o.indefinite + ' ' + o.name | inreceptacle(o:object, r:receptacle)}].\"\n            }\n        ],\n\n        \"examineObject.feedback\": [\n            {\n                \"condition\": \"isreceptacleobject(o:object)\",\n                \"rhs\": \"This is a normal {o.name}. In it, you see [{o2.indefinite + ' ' + o2.name | inreceptacleobject(o2:object, o:object)}].\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & ishot(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a hot and clean sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & iscool(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a cool and clean sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a clean sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"ishot(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a hot sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"iscool(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a cool sliced {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & ishot(o:object)\",\n                \"rhs\": \"This is a hot and clean {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object) & iscool(o:object)\",\n                \"rhs\": \"This is a cool and clean {o.name}.\"\n            },\n            {\n                \"condition\": \"ishot(o:object)\",\n                \"rhs\": \"This is a hot {o.name}.\"\n            },\n            {\n                \"condition\": \"isclean(o:object)\",\n                \"rhs\": \"This is a clean {o.name}.\"\n            },\n            {\n                \"condition\": \"iscool(o:object)\",\n                \"rhs\": \"This is a cold {o.name}.\"\n            },\n            {\n                \"condition\": \"toggleable(o:object) & istoggled(o:object)\",\n                \"rhs\": \"This {o.name} is on.\"\n            },\n            {\n                \"condition\": \"toggleable(o:object) & not_istoggled(o:object)\",\n                \"rhs\": \"This {o.name} is off.\"\n            },\n            {\n                \"condition\": \"sliceable(o:object) & issliced(o:object)\",\n                \"rhs\": \"This is a sliced {o.name}.\"\n            },\n            {\n                \"rhs\": \"There's nothing special about {o.name}.\"\n            }\n        ]\n    }\n\"\"\";\n\naction GotoLocation {\n    template :: \"go to [{r.name | receptacleatlocation(r:receptacle, lend:location)}]\";\n    feedback :: \"#GotoLocation.feedback#\";\n}\n\naction OpenObject {\n    template :: \"open {r}\";\n    feedback :: \"#OpenObject.feedback#\";\n}\n\naction CloseObject {\n    template :: \"close {r}\";\n    feedback :: \"#CloseObject.feedback#\";\n}\n\naction PickupObject {\n    template :: \"take {o} from {r}\";\n    feedback :: \"#PickupObject.feedback#\";\n}\n\naction PickupObjectFromReceptacleObject {\n    template :: \"take {o} from {r}\";\n    feedback :: \"#PickupObjectFromReceptacleObject.feedback#\";\n}\n\naction PickupEmptyReceptacleObject {\n    template :: \"take {o} from {r}\";\n    feedback :: \"#PickupEmptyReceptacleObject.feedback#\";\n}\n\naction PickupFullReceptacleObject {\n    template :: \"take {outerr} from {r}\";\n    feedback :: \"#PickupFullReceptacleObject.feedback#\";\n}\n\naction PutObject {\n    template :: \"put {o} in/on {r}\";\n    feedback :: \"#PutObject.feedback#\";\n}\n\naction PutObjectInReceptacleObject {\n    template :: \"put {o} into {outero}\";\n    feedback :: \"#PutObjectInReceptacleObject.feedback#\";\n}\n\naction PutEmptyReceptacleObjectinReceptacle {\n    template :: \"put {o} in/on {r}\";\n    feedback :: \"#PutEmptyReceptacleObjectinReceptacle.feedback#\";\n}\n\naction PutFullReceptacleObjectInReceptacle {\n    template :: \"put {outero} in {r}\";\n    feedback :: \"#PutFullReceptacleObjectInReceptacle.feedback#\";\n}\n\naction inventory {\n    template :: \"inventory\";\n    feedback :: \"#inventory.feedback#\";\n}\n\naction examineReceptacle {\n    template :: \"examine {r}\";\n    feedback :: \"#examineReceptacle.feedback#\";\n}\n\naction examineObject {\n    template :: \"examine {o}\";\n    feedback :: \"#examineObject.feedback#\";\n}\n\naction ToggleObject {\n    template :: \"use {o}\";\n    feedback :: \"#toggleObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"toggleObject.feedback\": [\n                {\n                    \"condition\": \"toggleable(o:object) & istoggled(o:object)\",\n                    \"rhs\": \"You turn on the {o.name}.\"\n                },\n                {\n                    \"condition\": \"toggleable(o:object)\",\n                    \"rhs\": \"You turn off the {o.name}.\"\n                },\n                {\n                    \"rhs\": \"You don't see any switch on the {o.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction HeatObject {\n    template :: \"heat {o} with {r}\";\n    feedback :: \"#heatObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"heatObject.feedback\": [\n                {\n                    \"rhs\": \"You heat the {o.name} using the {r.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction CleanObject {\n    template :: \"clean {o} with {r}\";\n    feedback :: \"#cleanObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"cleanObject.feedback\": [\n                {\n                    \"rhs\": \"You clean the {o.name} using the {r.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction CoolObject {\n    template :: \"cool {o} with {r}\";\n    feedback :: \"#coolObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"coolObject.feedback\": [\n                {\n                    \"rhs\": \"You cool the {o.name} using the {r.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction SliceObject {\n    template :: \"slice {co} with {ko}\";\n    feedback :: \"#sliceObject.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"sliceObject.feedback\": [\n                {\n                    \"rhs\": \"You sliced the {co.name} with the {ko.name}.\"\n                }\n            ]\n        }\n    \"\"\";\n}\n\naction look {\n    template :: \"look\";\n    feedback :: \"#look.feedback#\";\n\n    grammar :: \"\"\"\n        {\n            \"look.feedback\": [\n                {\n                   \"condition\": \"atlocation(a:agent, l:location) & receptacleatlocation(r:receptacle, l:location)\",\n                   \"rhs\": \"#look-variations#. Next to it, you see #list_objects_on_the_floor#.\"\n                },\n                {\n                    \"rhs\": \"You are in the middle of a room. Looking quickly around you, you see #list_appliances#.\"\n                }\n            ],\n\n            \"look-variations\": [\n                {\n                    \"rhs\": \"You are facing the [{r.name | atlocation(a:agent, l:location) & receptacleatlocation(r:receptacle, l:location)}]\"\n                }\n            ],\n\n            \"list_objects_on_the_floor\": [\n                {\n                    \"condition\": \"atlocation(a:agent, l:location) & objectatlocation(o:object, l:location) & receptacleatlocation(r:receptacle, l:location) & not_inreceptacle(o:object, r:receptacle)\",\n                    \"rhs\": \"[{#overview(o)# | atlocation(a:agent, l:location) & objectatlocation(o:object, l:location) & receptacleatlocation(r:receptacle, l:location) & not_inreceptacle(o:object, r:receptacle)}]\"\n                },\n                {\n                    \"rhs\": \"nothing\"\n                }\n            ],\n\n            \"list_appliances\": [\n                {\n                    \"condition\": \"receptacleatlocation(r:receptacle, l:location)\",\n                    \"rhs\": \"[{#overview(r)# | receptacleatlocation(r:receptacle, l:location)}]\"\n                },\n                {\n                    \"rhs\": \"nothing\"\n                }\n            ],\n\n            \"overview(o, r)\": [\n                {\n                    \"rhs\": \"{o.indefinite} {o.name} (in/on the {r.name})}\"\n                }\n            ],\n\n            \"overview(o)\": [\n                {\n                    \"rhs\": \"{o.indefinite} {o.name}\"\n                }\n            ],\n            \"overview(r)\": [\n                {\n                    \"rhs\": \"{r.indefinite} {r.name or r.id}\"\n                }\n            ],\n            \"overview_with_state(r)\": [\n                {\n                    \"rhs\": \"{r.indefinite} {r.name or r.id}#overview_state(r)#\"\n                }\n            ],\n            \"overview_state(r)\": [\n                {\n                    \"condition\": \"openable(r:receptacle) & opened(r:receptacle)\",\n                    \"rhs\": \" (it is open)\"\n                },\n                {\n                    \"condition\": \"openable(r:receptacle)\",\n                    \"rhs\": \" (it is closed)\"\n                },\n                {\n                    \"rhs\": \"\"\n                }\n            ],\n\n            \"list_empty\": [\n                {\n                    \"rhs\": \"nothing\"\n                }\n            ],\n            \"list_separator\": [\n                {\n                    \"rhs\": \", \"\n                }\n            ],\n            \"list_last_separator\": [\n                {\n                    \"rhs\": \", and \"\n                }\n            ]\n        }\n    \"\"\";\n}\n", "pddl_problem": "\n(define (problem plan_trial_T20190906_202340_749336)\n(:domain alfred)\n(:objects\nagent1 - agent\nCurtains - object\n        SprayBottle - object\n        Mirror - object\n        HousePlant - object\n        Watch - object\n        TeddyBear - object\n        WateringCan - object\n        Bathtub - object\n        LightSwitch - object\n        Vase - object\n        Candle - object\n        Bread - object\n        Statue - object\n        HandTowel - object\n        StoveKnob - object\n        PaperTowelRoll - object\n        Pan - object\n        PepperShaker - object\n        Painting - object\n        CellPhone - object\n        Plunger - object\n        Spoon - object\n        SaltShaker - object\n        KeyChain - object\n        Footstool - object\n        Poster - object\n        Television - object\n        LaundryHamperLid - object\n        Glassbottle - object\n        AlarmClock - object\n        WineBottle - object\n        Bowl - object\n        Sink - object\n        TissueBox - object\n        TennisRacket - object\n        ToiletPaper - object\n        ScrubBrush - object\n        CreditCard - object\n        Laptop - object\n        Cloth - object\n        Cup - object\n        Chair - object\n        BasketBall - object\n        Kettle - object\n        PaperTowel - object\n        ShowerDoor - object\n        BaseballBat - object\n        Potato - object\n        Pillow - object\n        Lettuce - object\n        RemoteControl - object\n        Window - object\n        DishSponge - object\n        CD - object\n        Boots - object\n        Blinds - object\n        Pen - object\n        Newspaper - object\n        Plate - object\n        Mug - object\n        ShowerGlass - object\n        ToiletPaperRoll - object\n        SoapBar - object\n        FloorLamp - object\n        SoapBottle - object\n        Pot - object\n        Pencil - object\n        Spatula - object\n        Towel - object\n        Fork - object\n        Ladle - object\n        Knife - object\n        Apple - object\n        Box - object\n        Tomato - object\n        ButterKnife - object\n        Egg - object\n        Book - object\n        DeskLamp - object\nCurtainsType - otype\n        SprayBottleType - otype\n        MirrorType - otype\n        HousePlantType - otype\n        WatchType - otype\n        TeddyBearType - otype\n        WateringCanType - otype\n        BathtubType - otype\n        LightSwitchType - otype\n        VaseType - otype\n        CandleType - otype\n        BreadType - otype\n        StatueType - otype\n        HandTowelType - otype\n        StoveKnobType - otype\n        PaperTowelRollType - otype\n        PanType - otype\n        PepperShakerType - otype\n        PaintingType - otype\n        CellPhoneType - otype\n        PlungerType - otype\n        SpoonType - otype\n        SaltShakerType - otype\n        KeyChainType - otype\n        FootstoolType - otype\n        PosterType - otype\n        TelevisionType - otype\n        LaundryHamperLidType - otype\n        GlassbottleType - otype\n        AlarmClockType - otype\n        WineBottleType - otype\n        BowlType - otype\n        SinkType - otype\n        TissueBoxType - otype\n        TennisRacketType - otype\n        ToiletPaperType - otype\n        ScrubBrushType - otype\n        CreditCardType - otype\n        LaptopType - otype\n        ClothType - otype\n        CupType - otype\n        ChairType - otype\n        BasketBallType - otype\n        KettleType - otype\n        PaperTowelType - otype\n        ShowerDoorType - otype\n        BaseballBatType - otype\n        PotatoType - otype\n        PillowType - otype\n        LettuceType - otype\n        RemoteControlType - otype\n        WindowType - otype\n        DishSpongeType - otype\n        CDType - otype\n        BootsType - otype\n        BlindsType - otype\n        PenType - otype\n        NewspaperType - otype\n        PlateType - otype\n        MugType - otype\n        ShowerGlassType - otype\n        ToiletPaperRollType - otype\n        SoapBarType - otype\n        FloorLampType - otype\n        SoapBottleType - otype\n        PotType - otype\n        PencilType - otype\n        SpatulaType - otype\n        TowelType - otype\n        ForkType - otype\n        LadleType - otype\n        KnifeType - otype\n        AppleType - otype\n        BoxType - otype\n        TomatoType - otype\n        ButterKnifeType - otype\n        EggType - otype\n        BookType - otype\n        DeskLampType - otype\nCabinetType - rtype\n        ShelfType - rtype\n        DiningTableType - rtype\n        TowelHolderType - rtype\n        PaintingHangerType - rtype\n        TVStandType - rtype\n        LaundryHamperType - rtype\n        OttomanType - rtype\n        SafeType - rtype\n        CoffeeMachineType - rtype\n        CounterTopType - rtype\n        ToiletType - rtype\n        FridgeType - rtype\n        CoffeeTableType - rtype\n        SinkBasinType - rtype\n        GarbageCanType - rtype\n        BathtubBasinType - rtype\n        SideTableType - rtype\n        CartType - rtype\n        BedType - rtype\n        DeskType - rtype\n        SofaType - rtype\n        ArmChairType - rtype\n        MicrowaveType - rtype\n        HandTowelHolderType - rtype\n        ToasterType - rtype\n        ToiletPaperHangerType - rtype\n        StoveBurnerType - rtype\n        DrawerType - rtype\n        DresserType - rtype\n\n\n        Bathtub_bar__minus_03_dot_59_bar__plus_00_dot_11_bar__plus_01_dot_52 - object\n        Candle_bar__minus_00_dot_41_bar__plus_00_dot_81_bar__plus_01_dot_54 - object\n        Candle_bar__minus_03_dot_00_bar__plus_00_dot_81_bar__plus_00_dot_16 - object\n        Candle_bar__minus_03_dot_27_bar__plus_00_dot_54_bar__plus_02_dot_11 - object\n        Cloth_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_35 - object\n        Cloth_bar__minus_02_dot_97_bar__plus_00_dot_19_bar__plus_00_dot_34 - object\n        Faucet_bar__minus_00_dot_11_bar__plus_00_dot_79_bar__plus_01_dot_92 - object\n        Faucet_bar__minus_02_dot_54_bar__plus_00_dot_79_bar__plus_00_dot_11 - object\n        Faucet_bar__minus_03_dot_61_bar__plus_01_dot_78_bar__plus_02_dot_30 - object\n        HandTowel_bar__minus_00_dot_03_bar__plus_01_dot_54_bar__plus_01_dot_54 - object\n        LightSwitch_bar__minus_00_dot_78_bar__plus_01_dot_37_bar__plus_03_dot_30 - object\n        Mirror_bar__plus_00_dot_00_bar__plus_01_dot_47_bar__plus_01_dot_92 - object\n        Mirror_bar__plus_00_dot_00_bar__plus_01_dot_47_bar__plus_02_dot_70 - object\n        Plunger_bar__minus_02_dot_53_bar__plus_00_dot_00_bar__plus_03_dot_03 - object\n        ScrubBrush_bar__minus_02_dot_33_bar__plus_00_dot_00_bar__plus_03_dot_16 - object\n        ShowerCurtain_bar__minus_03_dot_21_bar__plus_02_dot_10_bar__plus_02_dot_19 - object\n        ShowerDoor_bar__minus_01_dot_07_bar__plus_01_dot_03_bar__plus_00_dot_52 - object\n        ShowerGlass_bar__minus_00_dot_49_bar__plus_01_dot_49_bar__plus_00_dot_53 - object\n        ShowerHead_bar__minus_00_dot_08_bar__plus_01_dot_15_bar__plus_00_dot_66 - object\n        Sink_bar__minus_00_dot_26_bar__plus_00_dot_66_bar__plus_01_dot_92 - object\n        Sink_bar__minus_02_dot_54_bar__plus_00_dot_66_bar__plus_00_dot_25 - object\n        SoapBar_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_74 - object\n        SoapBar_bar__minus_00_dot_35_bar__plus_00_dot_81_bar__plus_02_dot_87 - object\n        SoapBar_bar__minus_02_dot_04_bar__plus_00_dot_81_bar__plus_00_dot_22 - object\n        SoapBar_bar__minus_03_dot_56_bar__plus_00_dot_19_bar__plus_01_dot_13 - object\n        SoapBottle_bar__minus_00_dot_26_bar__plus_00_dot_22_bar__plus_02_dot_55 - object\n        SoapBottle_bar__minus_00_dot_36_bar__plus_00_dot_22_bar__plus_02_dot_20 - object\n        SprayBottle_bar__minus_00_dot_22_bar__plus_00_dot_81_bar__plus_03_dot_00 - object\n        SprayBottle_bar__minus_02_dot_92_bar__plus_00_dot_81_bar__plus_00_dot_47 - object\n        ToiletPaper_bar__minus_02_dot_41_bar__plus_00_dot_15_bar__plus_03_dot_22 - object\n        ToiletPaper_bar__minus_02_dot_69_bar__plus_00_dot_95_bar__plus_03_dot_18 - object\n        Towel_bar__minus_01_dot_51_bar__plus_01_dot_50_bar__plus_00_dot_11 - object\n        Window_bar__minus_04_dot_13_bar__plus_01_dot_52_bar__plus_01_dot_50 - object\n        Bathtub_bar__minus_03_dot_59_bar__plus_00_dot_11_bar__plus_01_dot_52_bar_BathtubBasin - receptacle\n        CounterTop_bar__minus_00_dot_28_bar__plus_00_dot_79_bar__plus_01_dot_93 - receptacle\n        CounterTop_bar__minus_02_dot_54_bar__plus_00_dot_81_bar__plus_00_dot_28 - receptacle\n        Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_01_dot_72 - receptacle\n        Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_16 - receptacle\n        Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_59 - receptacle\n        Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_03_dot_03 - receptacle\n        Drawer_bar__minus_00_dot_33_bar__plus_00_dot_62_bar__plus_02_dot_59 - receptacle\n        Drawer_bar__minus_00_dot_33_bar__plus_00_dot_62_bar__plus_03_dot_03 - receptacle\n        Drawer_bar__minus_02_dot_25_bar__plus_00_dot_32_bar__plus_00_dot_28 - receptacle\n        Drawer_bar__minus_02_dot_84_bar__plus_00_dot_32_bar__plus_00_dot_28 - receptacle\n        GarbageCan_bar__minus_01_dot_79_bar__plus_00_dot_00_bar__plus_00_dot_17 - receptacle\n        HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_01_dot_54 - receptacle\n        HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_02_dot_31 - receptacle\n        HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_03_dot_11 - receptacle\n        HandTowelHolder_bar__minus_03_dot_21_bar__plus_01_dot_59_bar__plus_00_dot_34 - receptacle\n        Sink_bar__minus_00_dot_26_bar__plus_00_dot_66_bar__plus_01_dot_92_bar_SinkBasin - receptacle\n        Sink_bar__minus_02_dot_54_bar__plus_00_dot_66_bar__plus_00_dot_25_bar_SinkBasin - receptacle\n        ToiletPaperHanger_bar__minus_02_dot_35_bar__plus_00_dot_83_bar__plus_03_dot_30 - receptacle\n        Toilet_bar__minus_02_dot_84_bar__plus_00_dot_00_bar__plus_02_dot_76 - receptacle\n        TowelHolder_bar__minus_01_dot_51_bar__plus_01_dot_48_bar__plus_00_dot_00 - receptacle\n        loc_bar__minus_6_bar_11_bar_1_bar_45 - location\n        loc_bar__minus_7_bar_3_bar_2_bar_60 - location\n        loc_bar__minus_12_bar_5_bar_3_bar_60 - location\n        loc_bar__minus_10_bar_3_bar_3_bar_0 - location\n        loc_bar__minus_6_bar_8_bar_1_bar_45 - location\n        loc_bar__minus_9_bar_7_bar_2_bar_45 - location\n        loc_bar__minus_4_bar_11_bar_1_bar_15 - location\n        loc_bar__minus_11_bar_4_bar_3_bar_60 - location\n        loc_bar__minus_4_bar_11_bar_2_bar_45 - location\n        loc_bar__minus_6_bar_9_bar_1_bar_45 - location\n        loc_bar__minus_6_bar_7_bar_2_bar_45 - location\n        loc_bar__minus_12_bar_5_bar_3_bar_0 - location\n        loc_bar__minus_7_bar_3_bar_1_bar_0 - location\n        loc_bar__minus_9_bar_11_bar_3_bar_60 - location\n        loc_bar__minus_4_bar_9_bar_1_bar_0 - location\n        loc_bar__minus_4_bar_8_bar_1_bar_15 - location\n        loc_bar__minus_7_bar_3_bar_3_bar_45 - location\n        loc_bar__minus_7_bar_4_bar_3_bar_45 - location\n        loc_bar__minus_4_bar_9_bar_1_bar_45 - location\n        loc_bar__minus_4_bar_11_bar_0_bar_30 - location\n        loc_bar__minus_10_bar_3_bar_2_bar_60 - location\n        loc_bar__minus_6_bar_10_bar_1_bar_45 - location\n        loc_bar__minus_4_bar_7_bar_1_bar_0 - location\n        loc_bar__minus_5_bar_9_bar_1_bar_45 - location\n        loc_bar__minus_7_bar_3_bar_1_bar_45 - location\n        loc_bar__minus_9_bar_11_bar_0_bar_60 - location\n        loc_bar__minus_4_bar_11_bar_1_bar_0 - location\n        loc_bar__minus_7_bar_3_bar_2_bar_15 - location\n        loc_bar__minus_10_bar_4_bar_1_bar_30 - location\n        )\n    \n\n(:init\n\n\n        (receptacleType HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_01_dot_54 HandTowelHolderType)\n        (receptacleType Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_59 DrawerType)\n        (receptacleType CounterTop_bar__minus_02_dot_54_bar__plus_00_dot_81_bar__plus_00_dot_28 CounterTopType)\n        (receptacleType Sink_bar__minus_00_dot_26_bar__plus_00_dot_66_bar__plus_01_dot_92_bar_SinkBasin SinkBasinType)\n        (receptacleType Drawer_bar__minus_02_dot_84_bar__plus_00_dot_32_bar__plus_00_dot_28 DrawerType)\n        (receptacleType Drawer_bar__minus_00_dot_33_bar__plus_00_dot_62_bar__plus_02_dot_59 DrawerType)\n        (receptacleType HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_02_dot_31 HandTowelHolderType)\n        (receptacleType TowelHolder_bar__minus_01_dot_51_bar__plus_01_dot_48_bar__plus_00_dot_00 TowelHolderType)\n        (receptacleType Bathtub_bar__minus_03_dot_59_bar__plus_00_dot_11_bar__plus_01_dot_52_bar_BathtubBasin BathtubBasinType)\n        (receptacleType Toilet_bar__minus_02_dot_84_bar__plus_00_dot_00_bar__plus_02_dot_76 ToiletType)\n        (receptacleType Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_16 DrawerType)\n        (receptacleType HandTowelHolder_bar__minus_03_dot_21_bar__plus_01_dot_59_bar__plus_00_dot_34 HandTowelHolderType)\n        (receptacleType CounterTop_bar__minus_00_dot_28_bar__plus_00_dot_79_bar__plus_01_dot_93 CounterTopType)\n        (receptacleType HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_03_dot_11 HandTowelHolderType)\n        (receptacleType ToiletPaperHanger_bar__minus_02_dot_35_bar__plus_00_dot_83_bar__plus_03_dot_30 ToiletPaperHangerType)\n        (receptacleType Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_03_dot_03 DrawerType)\n        (receptacleType Drawer_bar__minus_00_dot_33_bar__plus_00_dot_62_bar__plus_03_dot_03 DrawerType)\n        (receptacleType Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_01_dot_72 DrawerType)\n        (receptacleType Sink_bar__minus_02_dot_54_bar__plus_00_dot_66_bar__plus_00_dot_25_bar_SinkBasin SinkBasinType)\n        (receptacleType Drawer_bar__minus_02_dot_25_bar__plus_00_dot_32_bar__plus_00_dot_28 DrawerType)\n        (receptacleType GarbageCan_bar__minus_01_dot_79_bar__plus_00_dot_00_bar__plus_00_dot_17 GarbageCanType)\n        (objectType SoapBottle_bar__minus_00_dot_26_bar__plus_00_dot_22_bar__plus_02_dot_55 SoapBottleType)\n        (objectType LightSwitch_bar__minus_00_dot_78_bar__plus_01_dot_37_bar__plus_03_dot_30 LightSwitchType)\n        (objectType Cloth_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_35 ClothType)\n        (objectType ToiletPaper_bar__minus_02_dot_69_bar__plus_00_dot_95_bar__plus_03_dot_18 ToiletPaperType)\n        (objectType Bathtub_bar__minus_03_dot_59_bar__plus_00_dot_11_bar__plus_01_dot_52 BathtubType)\n        (objectType Sink_bar__minus_00_dot_26_bar__plus_00_dot_66_bar__plus_01_dot_92 SinkType)\n        (objectType SprayBottle_bar__minus_02_dot_92_bar__plus_00_dot_81_bar__plus_00_dot_47 SprayBottleType)\n        (objectType SoapBar_bar__minus_02_dot_04_bar__plus_00_dot_81_bar__plus_00_dot_22 SoapBarType)\n        (objectType SoapBar_bar__minus_00_dot_35_bar__plus_00_dot_81_bar__plus_02_dot_87 SoapBarType)\n        (objectType Sink_bar__minus_02_dot_54_bar__plus_00_dot_66_bar__plus_00_dot_25 SinkType)\n        (objectType Candle_bar__minus_00_dot_41_bar__plus_00_dot_81_bar__plus_01_dot_54 CandleType)\n        (objectType Candle_bar__minus_03_dot_00_bar__plus_00_dot_81_bar__plus_00_dot_16 CandleType)\n        (objectType Mirror_bar__plus_00_dot_00_bar__plus_01_dot_47_bar__plus_02_dot_70 MirrorType)\n        (objectType Cloth_bar__minus_02_dot_97_bar__plus_00_dot_19_bar__plus_00_dot_34 ClothType)\n        (objectType ShowerGlass_bar__minus_00_dot_49_bar__plus_01_dot_49_bar__plus_00_dot_53 ShowerGlassType)\n        (objectType SprayBottle_bar__minus_00_dot_22_bar__plus_00_dot_81_bar__plus_03_dot_00 SprayBottleType)\n        (objectType Mirror_bar__plus_00_dot_00_bar__plus_01_dot_47_bar__plus_01_dot_92 MirrorType)\n        (objectType SoapBar_bar__minus_03_dot_56_bar__plus_00_dot_19_bar__plus_01_dot_13 SoapBarType)\n        (objectType Candle_bar__minus_03_dot_27_bar__plus_00_dot_54_bar__plus_02_dot_11 CandleType)\n        (objectType Towel_bar__minus_01_dot_51_bar__plus_01_dot_50_bar__plus_00_dot_11 TowelType)\n        (objectType SoapBottle_bar__minus_00_dot_36_bar__plus_00_dot_22_bar__plus_02_dot_20 SoapBottleType)\n        (objectType HandTowel_bar__minus_00_dot_03_bar__plus_01_dot_54_bar__plus_01_dot_54 HandTowelType)\n        (objectType Plunger_bar__minus_02_dot_53_bar__plus_00_dot_00_bar__plus_03_dot_03 PlungerType)\n        (objectType ShowerDoor_bar__minus_01_dot_07_bar__plus_01_dot_03_bar__plus_00_dot_52 ShowerDoorType)\n        (objectType ScrubBrush_bar__minus_02_dot_33_bar__plus_00_dot_00_bar__plus_03_dot_16 ScrubBrushType)\n        (objectType SoapBar_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_74 SoapBarType)\n        (objectType Window_bar__minus_04_dot_13_bar__plus_01_dot_52_bar__plus_01_dot_50 WindowType)\n        (objectType ToiletPaper_bar__minus_02_dot_41_bar__plus_00_dot_15_bar__plus_03_dot_22 ToiletPaperType)\n        (canContain HandTowelHolderType HandTowelType)\n        (canContain DrawerType SprayBottleType)\n        (canContain DrawerType SoapBarType)\n        (canContain DrawerType SoapBottleType)\n        (canContain DrawerType ToiletPaperType)\n        (canContain DrawerType CandleType)\n        (canContain DrawerType ClothType)\n        (canContain DrawerType HandTowelType)\n        (canContain CounterTopType SprayBottleType)\n        (canContain CounterTopType SoapBarType)\n        (canContain CounterTopType SoapBottleType)\n        (canContain CounterTopType ToiletPaperType)\n        (canContain CounterTopType CandleType)\n        (canContain CounterTopType ClothType)\n        (canContain CounterTopType HandTowelType)\n        (canContain SinkBasinType SoapBarType)\n        (canContain SinkBasinType ClothType)\n        (canContain SinkBasinType HandTowelType)\n        (canContain DrawerType SprayBottleType)\n        (canContain DrawerType SoapBarType)\n        (canContain DrawerType SoapBottleType)\n        (canContain DrawerType ToiletPaperType)\n        (canContain DrawerType CandleType)\n        (canContain DrawerType ClothType)\n        (canContain DrawerType HandTowelType)\n        (canContain DrawerType SprayBottleType)\n        (canContain DrawerType SoapBarType)\n        (canContain DrawerType SoapBottleType)\n        (canContain DrawerType ToiletPaperType)\n        (canContain DrawerType CandleType)\n        (canContain DrawerType ClothType)\n        (canContain DrawerType HandTowelType)\n        (canContain HandTowelHolderType HandTowelType)\n        (canContain TowelHolderType TowelType)\n        (canContain BathtubBasinType HandTowelType)\n        (canContain BathtubBasinType SoapBarType)\n        (canContain BathtubBasinType ClothType)\n        (canContain ToiletType ClothType)\n        (canContain ToiletType SoapBarType)\n        (canContain ToiletType HandTowelType)\n        (canContain ToiletType ToiletPaperType)\n        (canContain ToiletType SoapBottleType)\n        (canContain ToiletType SprayBottleType)\n        (canContain ToiletType CandleType)\n        (canContain DrawerType SprayBottleType)\n        (canContain DrawerType SoapBarType)\n        (canContain DrawerType SoapBottleType)\n        (canContain DrawerType ToiletPaperType)\n        (canContain DrawerType CandleType)\n        (canContain DrawerType ClothType)\n        (canContain DrawerType HandTowelType)\n        (canContain HandTowelHolderType HandTowelType)\n        (canContain CounterTopType SprayBottleType)\n        (canContain CounterTopType SoapBarType)\n        (canContain CounterTopType SoapBottleType)\n        (canContain CounterTopType ToiletPaperType)\n        (canContain CounterTopType CandleType)\n        (canContain CounterTopType ClothType)\n        (canContain CounterTopType HandTowelType)\n        (canContain HandTowelHolderType HandTowelType)\n        (canContain ToiletPaperHangerType ToiletPaperType)\n        (canContain DrawerType SprayBottleType)\n        (canContain DrawerType SoapBarType)\n        (canContain DrawerType SoapBottleType)\n        (canContain DrawerType ToiletPaperType)\n        (canContain DrawerType CandleType)\n        (canContain DrawerType ClothType)\n        (canContain DrawerType HandTowelType)\n        (canContain DrawerType SprayBottleType)\n        (canContain DrawerType SoapBarType)\n        (canContain DrawerType SoapBottleType)\n        (canContain DrawerType ToiletPaperType)\n        (canContain DrawerType CandleType)\n        (canContain DrawerType ClothType)\n        (canContain DrawerType HandTowelType)\n        (canContain DrawerType SprayBottleType)\n        (canContain DrawerType SoapBarType)\n        (canContain DrawerType SoapBottleType)\n        (canContain DrawerType ToiletPaperType)\n        (canContain DrawerType CandleType)\n        (canContain DrawerType ClothType)\n        (canContain DrawerType HandTowelType)\n        (canContain SinkBasinType SoapBarType)\n        (canContain SinkBasinType ClothType)\n        (canContain SinkBasinType HandTowelType)\n        (canContain DrawerType SprayBottleType)\n        (canContain DrawerType SoapBarType)\n        (canContain DrawerType SoapBottleType)\n        (canContain DrawerType ToiletPaperType)\n        (canContain DrawerType CandleType)\n        (canContain DrawerType ClothType)\n        (canContain DrawerType HandTowelType)\n        (canContain GarbageCanType SprayBottleType)\n        (canContain GarbageCanType SoapBarType)\n        (canContain GarbageCanType SoapBottleType)\n        (canContain GarbageCanType ToiletPaperType)\n        (canContain GarbageCanType ClothType)\n        (canContain GarbageCanType HandTowelType)\n        (pickupable SoapBottle_bar__minus_00_dot_26_bar__plus_00_dot_22_bar__plus_02_dot_55)\n        (pickupable Cloth_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_35)\n        (pickupable ToiletPaper_bar__minus_02_dot_69_bar__plus_00_dot_95_bar__plus_03_dot_18)\n        (pickupable SprayBottle_bar__minus_02_dot_92_bar__plus_00_dot_81_bar__plus_00_dot_47)\n        (pickupable SoapBar_bar__minus_02_dot_04_bar__plus_00_dot_81_bar__plus_00_dot_22)\n        (pickupable SoapBar_bar__minus_00_dot_35_bar__plus_00_dot_81_bar__plus_02_dot_87)\n        (pickupable Candle_bar__minus_00_dot_41_bar__plus_00_dot_81_bar__plus_01_dot_54)\n        (pickupable Candle_bar__minus_03_dot_00_bar__plus_00_dot_81_bar__plus_00_dot_16)\n        (pickupable Cloth_bar__minus_02_dot_97_bar__plus_00_dot_19_bar__plus_00_dot_34)\n        (pickupable SprayBottle_bar__minus_00_dot_22_bar__plus_00_dot_81_bar__plus_03_dot_00)\n        (pickupable SoapBar_bar__minus_03_dot_56_bar__plus_00_dot_19_bar__plus_01_dot_13)\n        (pickupable Candle_bar__minus_03_dot_27_bar__plus_00_dot_54_bar__plus_02_dot_11)\n        (pickupable Towel_bar__minus_01_dot_51_bar__plus_01_dot_50_bar__plus_00_dot_11)\n        (pickupable SoapBottle_bar__minus_00_dot_36_bar__plus_00_dot_22_bar__plus_02_dot_20)\n        (pickupable HandTowel_bar__minus_00_dot_03_bar__plus_01_dot_54_bar__plus_01_dot_54)\n        (pickupable Plunger_bar__minus_02_dot_53_bar__plus_00_dot_00_bar__plus_03_dot_03)\n        (pickupable ScrubBrush_bar__minus_02_dot_33_bar__plus_00_dot_00_bar__plus_03_dot_16)\n        (pickupable SoapBar_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_74)\n        (pickupable ToiletPaper_bar__minus_02_dot_41_bar__plus_00_dot_15_bar__plus_03_dot_22)\n        \n        (openable Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_59)\n        (openable Drawer_bar__minus_02_dot_84_bar__plus_00_dot_32_bar__plus_00_dot_28)\n        (openable Drawer_bar__minus_00_dot_33_bar__plus_00_dot_62_bar__plus_02_dot_59)\n        (openable Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_16)\n        (openable Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_03_dot_03)\n        (openable Drawer_bar__minus_00_dot_33_bar__plus_00_dot_62_bar__plus_03_dot_03)\n        (openable Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_01_dot_72)\n        (openable Drawer_bar__minus_02_dot_25_bar__plus_00_dot_32_bar__plus_00_dot_28)\n        \n        (atLocation agent1 loc_bar__minus_10_bar_4_bar_1_bar_30)\n        \n        (cleanable Cloth_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_35)\n        (cleanable SoapBar_bar__minus_02_dot_04_bar__plus_00_dot_81_bar__plus_00_dot_22)\n        (cleanable SoapBar_bar__minus_00_dot_35_bar__plus_00_dot_81_bar__plus_02_dot_87)\n        (cleanable Cloth_bar__minus_02_dot_97_bar__plus_00_dot_19_bar__plus_00_dot_34)\n        (cleanable SoapBar_bar__minus_03_dot_56_bar__plus_00_dot_19_bar__plus_01_dot_13)\n        (cleanable SoapBar_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_74)\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        (inReceptacle SoapBottle_bar__minus_00_dot_36_bar__plus_00_dot_22_bar__plus_02_dot_20 Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_16)\n        (inReceptacle Sink_bar__minus_00_dot_26_bar__plus_00_dot_66_bar__plus_01_dot_92 Sink_bar__minus_00_dot_26_bar__plus_00_dot_66_bar__plus_01_dot_92_bar_SinkBasin)\n        (inReceptacle SoapBottle_bar__minus_00_dot_26_bar__plus_00_dot_22_bar__plus_02_dot_55 Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_59)\n        (inReceptacle SprayBottle_bar__minus_02_dot_92_bar__plus_00_dot_81_bar__plus_00_dot_47 CounterTop_bar__minus_02_dot_54_bar__plus_00_dot_81_bar__plus_00_dot_28)\n        (inReceptacle SoapBar_bar__minus_02_dot_04_bar__plus_00_dot_81_bar__plus_00_dot_22 CounterTop_bar__minus_02_dot_54_bar__plus_00_dot_81_bar__plus_00_dot_28)\n        (inReceptacle Candle_bar__minus_03_dot_00_bar__plus_00_dot_81_bar__plus_00_dot_16 CounterTop_bar__minus_02_dot_54_bar__plus_00_dot_81_bar__plus_00_dot_28)\n        (inReceptacle Cloth_bar__minus_02_dot_97_bar__plus_00_dot_19_bar__plus_00_dot_34 Drawer_bar__minus_02_dot_84_bar__plus_00_dot_32_bar__plus_00_dot_28)\n        (inReceptacle SprayBottle_bar__minus_00_dot_22_bar__plus_00_dot_81_bar__plus_03_dot_00 CounterTop_bar__minus_00_dot_28_bar__plus_00_dot_79_bar__plus_01_dot_93)\n        (inReceptacle SoapBar_bar__minus_00_dot_35_bar__plus_00_dot_81_bar__plus_02_dot_87 CounterTop_bar__minus_00_dot_28_bar__plus_00_dot_79_bar__plus_01_dot_93)\n        (inReceptacle Cloth_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_35 CounterTop_bar__minus_00_dot_28_bar__plus_00_dot_79_bar__plus_01_dot_93)\n        (inReceptacle SoapBar_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_74 CounterTop_bar__minus_00_dot_28_bar__plus_00_dot_79_bar__plus_01_dot_93)\n        (inReceptacle Candle_bar__minus_00_dot_41_bar__plus_00_dot_81_bar__plus_01_dot_54 CounterTop_bar__minus_00_dot_28_bar__plus_00_dot_79_bar__plus_01_dot_93)\n        (inReceptacle Towel_bar__minus_01_dot_51_bar__plus_01_dot_50_bar__plus_00_dot_11 TowelHolder_bar__minus_01_dot_51_bar__plus_01_dot_48_bar__plus_00_dot_00)\n        (inReceptacle HandTowel_bar__minus_00_dot_03_bar__plus_01_dot_54_bar__plus_01_dot_54 HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_01_dot_54)\n        (inReceptacle ToiletPaper_bar__minus_02_dot_69_bar__plus_00_dot_95_bar__plus_03_dot_18 Toilet_bar__minus_02_dot_84_bar__plus_00_dot_00_bar__plus_02_dot_76)\n        (inReceptacle SoapBar_bar__minus_03_dot_56_bar__plus_00_dot_19_bar__plus_01_dot_13 Bathtub_bar__minus_03_dot_59_bar__plus_00_dot_11_bar__plus_01_dot_52_bar_BathtubBasin)\n        \n        \n        (receptacleAtLocation Bathtub_bar__minus_03_dot_59_bar__plus_00_dot_11_bar__plus_01_dot_52_bar_BathtubBasin loc_bar__minus_11_bar_4_bar_3_bar_60)\n        (receptacleAtLocation CounterTop_bar__minus_00_dot_28_bar__plus_00_dot_79_bar__plus_01_dot_93 loc_bar__minus_4_bar_11_bar_2_bar_45)\n        (receptacleAtLocation CounterTop_bar__minus_02_dot_54_bar__plus_00_dot_81_bar__plus_00_dot_28 loc_bar__minus_7_bar_4_bar_3_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_01_dot_72 loc_bar__minus_6_bar_9_bar_1_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_16 loc_bar__minus_6_bar_11_bar_1_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_02_dot_59 loc_bar__minus_6_bar_8_bar_1_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_00_dot_33_bar__plus_00_dot_32_bar__plus_03_dot_03 loc_bar__minus_6_bar_10_bar_1_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_00_dot_33_bar__plus_00_dot_62_bar__plus_02_dot_59 loc_bar__minus_5_bar_9_bar_1_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_00_dot_33_bar__plus_00_dot_62_bar__plus_03_dot_03 loc_bar__minus_6_bar_10_bar_1_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_02_dot_25_bar__plus_00_dot_32_bar__plus_00_dot_28 loc_bar__minus_6_bar_7_bar_2_bar_45)\n        (receptacleAtLocation Drawer_bar__minus_02_dot_84_bar__plus_00_dot_32_bar__plus_00_dot_28 loc_bar__minus_9_bar_7_bar_2_bar_45)\n        (receptacleAtLocation GarbageCan_bar__minus_01_dot_79_bar__plus_00_dot_00_bar__plus_00_dot_17 loc_bar__minus_7_bar_3_bar_2_bar_60)\n        (receptacleAtLocation HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_01_dot_54 loc_bar__minus_4_bar_7_bar_1_bar_0)\n        (receptacleAtLocation HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_02_dot_31 loc_bar__minus_4_bar_9_bar_1_bar_0)\n        (receptacleAtLocation HandTowelHolder_bar__plus_00_dot_00_bar__plus_01_dot_64_bar__plus_03_dot_11 loc_bar__minus_4_bar_11_bar_1_bar_0)\n        (receptacleAtLocation HandTowelHolder_bar__minus_03_dot_21_bar__plus_01_dot_59_bar__plus_00_dot_34 loc_bar__minus_10_bar_3_bar_3_bar_0)\n        (receptacleAtLocation Sink_bar__minus_00_dot_26_bar__plus_00_dot_66_bar__plus_01_dot_92_bar_SinkBasin loc_bar__minus_4_bar_9_bar_1_bar_45)\n        (receptacleAtLocation Sink_bar__minus_02_dot_54_bar__plus_00_dot_66_bar__plus_00_dot_25_bar_SinkBasin loc_bar__minus_7_bar_3_bar_3_bar_45)\n        (receptacleAtLocation ToiletPaperHanger_bar__minus_02_dot_35_bar__plus_00_dot_83_bar__plus_03_dot_30 loc_bar__minus_9_bar_11_bar_0_bar_60)\n        (receptacleAtLocation Toilet_bar__minus_02_dot_84_bar__plus_00_dot_00_bar__plus_02_dot_76 loc_bar__minus_9_bar_11_bar_3_bar_60)\n        (receptacleAtLocation TowelHolder_bar__minus_01_dot_51_bar__plus_01_dot_48_bar__plus_00_dot_00 loc_bar__minus_7_bar_3_bar_2_bar_15)\n        (objectAtLocation SprayBottle_bar__minus_02_dot_92_bar__plus_00_dot_81_bar__plus_00_dot_47 loc_bar__minus_7_bar_4_bar_3_bar_45)\n        (objectAtLocation SoapBottle_bar__minus_00_dot_26_bar__plus_00_dot_22_bar__plus_02_dot_55 loc_bar__minus_6_bar_8_bar_1_bar_45)\n        (objectAtLocation Candle_bar__minus_03_dot_00_bar__plus_00_dot_81_bar__plus_00_dot_16 loc_bar__minus_7_bar_4_bar_3_bar_45)\n        (objectAtLocation SoapBar_bar__minus_00_dot_35_bar__plus_00_dot_81_bar__plus_02_dot_87 loc_bar__minus_4_bar_11_bar_2_bar_45)\n        (objectAtLocation Cloth_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_35 loc_bar__minus_4_bar_11_bar_2_bar_45)\n        (objectAtLocation Candle_bar__minus_00_dot_41_bar__plus_00_dot_81_bar__plus_01_dot_54 loc_bar__minus_4_bar_11_bar_2_bar_45)\n        (objectAtLocation SoapBar_bar__minus_02_dot_04_bar__plus_00_dot_81_bar__plus_00_dot_22 loc_bar__minus_7_bar_4_bar_3_bar_45)\n        (objectAtLocation SoapBar_bar__minus_00_dot_28_bar__plus_00_dot_81_bar__plus_02_dot_74 loc_bar__minus_4_bar_11_bar_2_bar_45)\n        (objectAtLocation Mirror_bar__plus_00_dot_00_bar__plus_01_dot_47_bar__plus_01_dot_92 loc_bar__minus_4_bar_8_bar_1_bar_15)\n        (objectAtLocation Bathtub_bar__minus_03_dot_59_bar__plus_00_dot_11_bar__plus_01_dot_52 loc_bar__minus_12_bar_5_bar_3_bar_60)\n        (objectAtLocation Mirror_bar__plus_00_dot_00_bar__plus_01_dot_47_bar__plus_02_dot_70 loc_bar__minus_4_bar_11_bar_1_bar_15)\n        (objectAtLocation ShowerGlass_bar__minus_00_dot_49_bar__plus_01_dot_49_bar__plus_00_dot_53 loc_bar__minus_7_bar_3_bar_1_bar_0)\n        (objectAtLocation Sink_bar__minus_02_dot_54_bar__plus_00_dot_66_bar__plus_00_dot_25 loc_bar__minus_10_bar_3_bar_2_bar_60)\n        (objectAtLocation Sink_bar__minus_00_dot_26_bar__plus_00_dot_66_bar__plus_01_dot_92 loc_bar__minus_4_bar_9_bar_1_bar_45)\n        (objectAtLocation ShowerDoor_bar__minus_01_dot_07_bar__plus_01_dot_03_bar__plus_00_dot_52 loc_bar__minus_7_bar_3_bar_1_bar_45)\n        (objectAtLocation HandTowel_bar__minus_00_dot_03_bar__plus_01_dot_54_bar__plus_01_dot_54 loc_bar__minus_4_bar_7_bar_1_bar_0)\n        (objectAtLocation Towel_bar__minus_01_dot_51_bar__plus_01_dot_50_bar__plus_00_dot_11 loc_bar__minus_7_bar_3_bar_2_bar_15)\n        (objectAtLocation Cloth_bar__minus_02_dot_97_bar__plus_00_dot_19_bar__plus_00_dot_34 loc_bar__minus_9_bar_7_bar_2_bar_45)\n        (objectAtLocation SoapBar_bar__minus_03_dot_56_bar__plus_00_dot_19_bar__plus_01_dot_13 loc_bar__minus_11_bar_4_bar_3_bar_60)\n        (objectAtLocation ToiletPaper_bar__minus_02_dot_69_bar__plus_00_dot_95_bar__plus_03_dot_18 loc_bar__minus_9_bar_11_bar_3_bar_60)\n        (objectAtLocation Plunger_bar__minus_02_dot_53_bar__plus_00_dot_00_bar__plus_03_dot_03 loc_bar__minus_9_bar_11_bar_3_bar_60)\n        (objectAtLocation Candle_bar__minus_03_dot_27_bar__plus_00_dot_54_bar__plus_02_dot_11 loc_bar__minus_11_bar_4_bar_3_bar_60)\n        (objectAtLocation LightSwitch_bar__minus_00_dot_78_bar__plus_01_dot_37_bar__plus_03_dot_30 loc_bar__minus_4_bar_11_bar_0_bar_30)\n        (objectAtLocation SoapBottle_bar__minus_00_dot_36_bar__plus_00_dot_22_bar__plus_02_dot_20 loc_bar__minus_6_bar_11_bar_1_bar_45)\n        (objectAtLocation ToiletPaper_bar__minus_02_dot_41_bar__plus_00_dot_15_bar__plus_03_dot_22 loc_bar__minus_9_bar_11_bar_0_bar_60)\n        (objectAtLocation Window_bar__minus_04_dot_13_bar__plus_01_dot_52_bar__plus_01_dot_50 loc_bar__minus_12_bar_5_bar_3_bar_0)\n        (objectAtLocation SprayBottle_bar__minus_00_dot_22_bar__plus_00_dot_81_bar__plus_03_dot_00 loc_bar__minus_4_bar_11_bar_2_bar_45)\n        (objectAtLocation ScrubBrush_bar__minus_02_dot_33_bar__plus_00_dot_00_bar__plus_03_dot_16 loc_bar__minus_9_bar_11_bar_0_bar_60)\n        )\n    \n\n        (:goal\n            (and\n                (exists (?r - receptacle)\n                    (exists (?o - object)\n                        (and\n                            (cleanable ?o)\n                            (objectType ?o SoapBarType)\n                            (receptacleType ?r DrawerType)\n                            (isClean ?o)\n                            (inReceptacle ?o ?r)\n                        )\n                    )\n                )\n            )\n        )\n    )\n    ", "solvable": true}